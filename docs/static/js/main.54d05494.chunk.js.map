{"version":3,"sources":["Footer.tsx","protocol.ts","tree/problem.ts","tree/filter.ts","tree/Context.ts","tree/images/add.svg","tree/images/edit.svg","tree/images/confirm.svg","tree/images/cancel.svg","tree/images/trash.svg","tree/images/copy.svg","tree/images/code.svg","tree/images/section.svg","tree/images/value.svg","tree/images/vscode.svg","tree/images/google-translate.svg","tree/images/deepl.svg","tree/components/Button.tsx","tree/components/Controls.tsx","tree/components/ControlsContainer.tsx","tree/util.ts","tree/components/TranslateButton.tsx","tree/components/SourceMatch.tsx","tree/ValueNode.tsx","tree/ObjectNode.tsx","tree/Tree.tsx","action.ts","parse.ts","LanguagesSelection.tsx","TreeCollapse.tsx","ProblemsSelection.tsx","Import.tsx","Export.tsx","App.tsx","index.tsx"],"names":["Footer","year","useMemo","Date","getFullYear","Container","ActionType","MatchType","NodeType","styled","div","Problem","NO_PROBLEM","extractPlaceholders","value","matches","match","Array","from","Set","map","p","substring","length","sort","findProblemsTraverse","node","languages","sourceMatches","report","type","VALUE","exactSourceMatches","filter","id","EXACT","partialSourceMatches","startsWith","some","l","undefined","values","MISSING","trim","EMPTY","foundSourceMatch","foundPartialSourceMatch","PARTIAL_MATCH_IN_SOURCES","NO_MATCH_IN_SOURCES","Object","v","index","sorted","SAME","DEFAULT","placeholders","all","isEqual","PLACEHOLDER_MISMATCH","OBJECT","children","forEach","n","findProblems","problems","problem","push","findFilteredIDsTraverse","caseSensitive","isMatch","includes","toLowerCase","findFilteredIDs","ids","findIDsTraverse","findIDs","TreeContext","React","createContext","Button","onClick","loading","props","handleClick","useCallback","args","StyledButton","span","Controls","operation","buttons","visible","copyString","visibilityStyle","opacity","style","Operation","src","image","width","alt","name","button","event","callback","stopPropagation","title","text","copy","MainControls","onAdd","onRemove","onEdit","onSources","add","trash","edit","code","ConfirmControls","onConfirm","onCancel","editMode","confirm","cancel","AddControls","onObject","onValue","section","ConfirmationModes","useEscapeKey","onEscape","useEffect","handleEsc","keyCode","window","addEventListener","removeEventListener","getUrlParams","url","URL","location","href","deepLKey","searchParams","get","sessionId","getAll","setUrlParam","set","delete","append","history","pushState","ControlsContainer","editing","onConfirmEdit","onCancelEdit","onBeginEdit","useState","mode","setMode","withResetMode","fn","remove","GoogleTranslateButton","fromLanguage","toLanguage","encodeURIComponent","target","rel","googleTranslate","DeepLTranslateButton","onResult","setLoading","deepLTranslate","source_lang","toUpperCase","target_lang","auth_key","free_api","endsWith","then","result","data","translations","catch","error","console","finally","deepl","SourceMatch","file","line","contextStartLine","context","idPosition","indexOf","Header","File","FileName","highlighted","content","LineContent","Line","LineNumber","vscode","pre","Value","language","onChange","issues","hintForTranslation","autoFocus","setAutoFocus","focused","setFocused","inputStyle","setInputStyle","cancelEdit","change","ValueContainer","LanguageTag","ValueEditor","onFocus","ref","elem","select","ValueButtons","ValueWrapper","hint","join","onDoubleClick","offsetWidth","height","offsetHeight","left","offsetLeft","maxWidth","document","body","ValueNode","showControls","setShowControls","showSources","setShowSources","setEditing","setValues","useContext","onChangeValue","problematicTranslations","disabled","problemHints","hasSourceMatches","onMouseEnter","onMouseLeave","Label","ValuesContainer","sameAsLanguage","keys","find","differentInLanguage","hintLanguage","newValue","s","Sources","expanded","textarea","ObjectNode","setExpanded","addingType","setAddingType","addingLabel","setAddingLabel","filteredIds","collapseAll","onCollapseChange","stopAdding","mainProblem","addingValid","test","onConfirmAdd","onToggleCollapse","c","NodeContainer","Caret","Collapsed","NewItemInput","placeholder","onKeyPress","e","key","SubTree","input","Tree","textFilter","problemsFilter","setProblematicTranslations","textFilteredIds","setTextFilteredIds","IDs","problemIdMap","reduce","aggr","Provider","label","parentId","cloneDeep","item","split","first","parts","child","changeValue","traversed","importJson","current","Error","newNode","exportJson","initializeParse","initialSessionId","useParse","setSession","useParseQuery","query","Parse","Query","equalTo","enableLocalDatastore","enableLiveQuery","results","save","object","attributes","applyModification","newData","onImportJson","json","SUPPORTED_LANGUAGES","ar","bn","bg","ca","hr","cs","da","nl","en","et","fil","fi","fr","de","el","iw","hi","hu","is","it","ja","ko","lv","lt","ms","no","pl","pt","ro","ru","sr","zh","sk","sl","es","sw","sv","th","tr","uk","vi","a","freeApi","fetch","response","LanguagesSelection","onSelectionChange","showLanguageSelection","setShowLanguageSelection","setLanguages","updateLanguage","lang","enabled","updated","x","supportedLanguages","setSupportedLanguages","getDeepLLanguages","SelectionWrapper","Selection","b","sortAlphabetically","CheckBox","checked","TreeCollapse","Collapse","onCollapseAll","ALL_PROBLEMS","ProblemsSelection","filteredProblems","showProblemsSelection","setShowProblemsSelection","checkJson","JSON","parse","Import","onImport","jsonInput","useRef","showContainer","setShowContainer","setLanguage","valid","setValid","setError","handleOpen","handleSubmit","toString","handleFileDrop","files","Wrapper","NonSelectable","maxFiles","onDrop","getRootProps","isDragActive","isDragReject","FileDropWrapper","JSONInput","SubmitButton","Export","handleDownload","element","createElement","Blob","stringify","createObjectURL","download","appendChild","click","removeChild","handleCopyToClipboard","navigator","clipboard","writeText","textArea","top","position","focus","execCommand","err","copyToClipboard","App","setCollapseAll","setCaseSensitive","setFilter","setFilteredProblems","AppContainer","TopBar","Filter","FilterInput","Content","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.54d05494.chunk.js","sourcesContent":["import React, { useMemo } from \"react\";\nimport styled from \"styled-components\";\n\nexport default function Footer() {\n  const year = useMemo(() => new Date().getFullYear(), []);\n  return <Container>{`© Pavel Zarecky, ${year}`}</Container>;\n}\n\nconst Container = styled.div`\n  padding-right: 15px;\n  text-align: end;\n`;\n","export interface TNodeValues {\n  [language: string]: string;\n}\n\nexport enum ActionType {\n  ADD = \"ADD\",\n  CHANGE_VALUE = \"CHANGE_VALUE\",\n  REMOVE = \"REMOVE\",\n  OPEN = \"OPEN\",\n  DATA_UPDATE = \"DATA_UPDATE\",\n  SOURCE_MATCHES_UPDATE = \"SOURCE_MATCHES_UPDATE\",\n}\n\nexport enum MatchType {\n  EXACT = \"exact\",\n  PARTIAL = \"partial\",\n}\n\nexport interface TSourceMatch {\n  id: string;\n  file: string;\n  line: number;\n  contextStartLine: number;\n  context: string[];\n  type: MatchType;\n}\n\nexport enum NodeType {\n  OBJECT = \"OBJECT\",\n  VALUE = \"VALUE\",\n}\n\nexport type TObjectNode = {\n  id: string;\n  name: string;\n  type: NodeType.OBJECT;\n  children: TNode[];\n};\n\nexport type TValueNode = {\n  id: string;\n  name: string;\n  type: NodeType.VALUE;\n  exactSourceMatches?: TSourceMatch[];\n  partialSourceMatches?: TSourceMatch[];\n  values: TNodeValues;\n};\n\nexport type TNode = TObjectNode | TValueNode;\n\ntype JsonDataValue = string | JsonData;\nexport interface JsonData extends Record<string, JsonDataValue> {}\n","import { MatchType, NodeType, TNode, TSourceMatch } from \"../protocol\";\nimport { isEqual } from \"lodash\";\n\nexport const NO_PROBLEM = \"NO_PROBLEM\";\nexport enum Problem {\n  MISSING = \"MISSING\", // completely missing\n  EMPTY = \"EMPTY\", // only whitespaces, or empty section\n  DEFAULT = \"DEFAULT\", // default label used\n  SAME = \"SAME\", // same entry for multiple languages\n  PLACEHOLDER_MISMATCH = \"PLACEHOLDER_MISMATCH\", // placeholders don't match between languages\n  NO_MATCH_IN_SOURCES = \"NO_MATCH_IN_SOURCES\", // not found in any source file\n  PARTIAL_MATCH_IN_SOURCES = \"PARTIAL_MATCH_IN_SOURCES\", // only parent node found in source files\n}\n\nexport function extractPlaceholders(value?: string) {\n  const matches = value?.match(/{{\\w+}}/g);\n  if (!matches) return [];\n\n  return Array.from(\n    new Set(matches.map((p) => p.substring(2, p.length - 2)))\n  ).sort();\n}\n\nfunction findProblemsTraverse(\n  node: TNode,\n  languages: string[],\n  sourceMatches: TSourceMatch[] | undefined,\n  report: (id: string, problem: Problem) => void\n) {\n  switch (node.type) {\n    case NodeType.VALUE:\n      {\n        node.exactSourceMatches =\n          sourceMatches?.filter(\n            ({ id, type }) => id === node.id && type === MatchType.EXACT\n          ) || [];\n        node.partialSourceMatches =\n          sourceMatches?.filter(\n            ({ id }) =>\n              node.id.startsWith(`${id}.`) || node.id.startsWith(`${id}_plural`)\n          ) || [];\n\n        if (\n          languages.some(\n            (l) => node.values[l] === undefined || node.values[l] === null\n          )\n        ) {\n          report(node.id, Problem.MISSING);\n        } else if (languages.some((l) => !node.values[l].trim())) {\n          report(node.id, Problem.EMPTY);\n        }\n\n        const foundSourceMatch = node.exactSourceMatches.length;\n        const foundPartialSourceMatch = node.partialSourceMatches.length;\n        if (!foundSourceMatch) {\n          if (foundPartialSourceMatch) {\n            report(node.id, Problem.PARTIAL_MATCH_IN_SOURCES);\n          } else {\n            report(node.id, Problem.NO_MATCH_IN_SOURCES);\n          }\n        }\n\n        if (\n          Object.values(node.values)\n            .sort()\n            .some((v, index, sorted) => index && v === sorted[index - 1])\n        ) {\n          report(node.id, Problem.SAME);\n        }\n\n        if (languages.some((l) => node.values[l] === node.id)) {\n          report(node.id, Problem.DEFAULT);\n        }\n\n        if (\n          Object.values(node.values)\n            .map(extractPlaceholders)\n            .some(\n              (placeholders, index, all) =>\n                index && !isEqual(placeholders, all[index - 1])\n            )\n        ) {\n          report(node.id, Problem.PLACEHOLDER_MISMATCH);\n        }\n      }\n      break;\n    case NodeType.OBJECT:\n      if (!node.children.length) {\n        return report(node.id, Problem.EMPTY);\n      }\n      node.children.forEach((n) =>\n        findProblemsTraverse(n, languages, sourceMatches, report)\n      );\n      break;\n  }\n}\n\nexport type TFindProblemsResult = Array<{ id: string; problem: Problem }>;\nexport function findProblems(\n  node: TNode,\n  languages: string[],\n  sourceMatches?: TSourceMatch[]\n) {\n  const problems: TFindProblemsResult = [];\n  findProblemsTraverse(\n    node,\n    languages,\n    sourceMatches,\n    (id: string, problem: Problem) => {\n      if (!sourceMatches && problem === Problem.NO_MATCH_IN_SOURCES) return;\n      problems.push({ id, problem });\n    }\n  );\n  return problems;\n}\n","import { NodeType, TNode } from \"../protocol\";\n\nfunction findFilteredIDsTraverse(\n  node: TNode,\n  filter: string,\n  caseSensitive: boolean,\n  report: (id: string) => void\n) {\n  function isMatch(id?: string) {\n    return caseSensitive\n      ? id?.includes(filter)\n      : id?.toLowerCase().includes(filter.toLowerCase());\n  }\n\n  switch (node.type) {\n    case NodeType.VALUE:\n      if (isMatch(node.id) || Object.values(node.values).some(isMatch)) {\n        report(node.id);\n      }\n      break;\n    case NodeType.OBJECT:\n      if (!node.children.length && isMatch(node.id)) {\n        report(node.id);\n      }\n      node.children.forEach((n) =>\n        findFilteredIDsTraverse(n, filter, caseSensitive, report)\n      );\n      break;\n  }\n}\n\nexport function findFilteredIDs(\n  node: TNode,\n  filter: string,\n  caseSensitive: boolean\n) {\n  const ids: string[] = [];\n  findFilteredIDsTraverse(node, filter, caseSensitive, (id) => {\n    ids.push(id);\n  });\n  return ids;\n}\n\nfunction findIDsTraverse(node: TNode, report: (id: string) => void) {\n  switch (node.type) {\n    case NodeType.VALUE:\n      report(node.id);\n      break;\n    case NodeType.OBJECT:\n      if (!node.children.length) {\n        report(node.id);\n      }\n      node.children.forEach((n) => findIDsTraverse(n, report));\n      break;\n  }\n}\n\nexport function findIDs(node: TNode) {\n  const ids: string[] = [];\n  findIDsTraverse(node, (id) => {\n    ids.push(id);\n  });\n  return ids;\n}\n","import React from \"react\";\nimport { NodeType } from \"../protocol\";\nimport { TFindProblemsResult } from \"./problem\";\n\ntype Props = {\n  collapseAll?: boolean;\n  onCollapseChange?: () => void;\n  disabled?: boolean;\n  filteredIds?: string[];\n  problematicTranslations?: TFindProblemsResult;\n  languages?: string[];\n  onAdd?: (id: string, type: NodeType, label: string) => void;\n  onChangeValue?: (id: string, language: string, value: string) => void;\n  onRemove?: (id: string) => void;\n};\n\nexport const TreeContext = React.createContext<Props>({});\n","export default __webpack_public_path__ + \"static/media/add.d8693632.svg\";","export default __webpack_public_path__ + \"static/media/edit.962e7af9.svg\";","export default __webpack_public_path__ + \"static/media/confirm.0addefb3.svg\";","export default __webpack_public_path__ + \"static/media/cancel.caea72e4.svg\";","export default __webpack_public_path__ + \"static/media/trash.85c719f0.svg\";","export default __webpack_public_path__ + \"static/media/copy.2327b577.svg\";","export default __webpack_public_path__ + \"static/media/code.33554129.svg\";","export default __webpack_public_path__ + \"static/media/section.774f12f9.svg\";","export default __webpack_public_path__ + \"static/media/value.cddb19bc.svg\";","export default __webpack_public_path__ + \"static/media/vscode.ea98ae01.svg\";","export default __webpack_public_path__ + \"static/media/google-translate.0346cfbe.svg\";","export default __webpack_public_path__ + \"static/media/deepl.36a3b23e.svg\";","import styled from \"styled-components\";\nimport React, { useCallback } from \"react\";\n\ntype TButtonProps = React.HTMLAttributes<HTMLSpanElement> & {\n  loading?: boolean;\n};\n\nexport function Button({ onClick, loading, ...props }: TButtonProps) {\n  const handleClick = useCallback(\n    (...args: Parameters<React.MouseEventHandler<HTMLSpanElement>>) => {\n      if (loading) return;\n      onClick?.(...args);\n    },\n    [loading, onClick]\n  );\n\n  return <StyledButton onClick={handleClick} loading={loading} {...props} />;\n}\n\nexport const StyledButton = styled.span`\n  cursor: pointer;\n  vertical-align: middle;\n  padding: 0;\n  border: none;\n  background: none;\n  opacity: 0.5;\n  min-width: 1em;\n  margin: 0 3px;\n\n  &:hover {\n    opacity: ${({ loading }: { loading?: boolean }) => (loading ? \"0.5\" : \"1\")};\n    font-weight: bold;\n  }\n\n  &:hover > * {\n    transform: scale(1.5, 1.5);\n  }\n`;\n","import {\n  add,\n  edit,\n  confirm,\n  cancel,\n  trash,\n  copy,\n  code,\n  section,\n  value,\n} from \"../images\";\nimport styled from \"styled-components\";\nimport { Button } from \"./Button\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\n\ntype TOperation = {\n  name: string;\n  image: string;\n};\n\ntype TButton = {\n  name: string;\n  image: string;\n  callback: () => void;\n};\n\ntype TControlsProps = {\n  operation?: TOperation;\n  visible?: boolean;\n  copyString?: string;\n  buttons: Array<TButton | null | undefined>;\n};\n\nfunction Controls({\n  operation,\n  buttons,\n  visible = true,\n  copyString,\n}: TControlsProps) {\n  const visibilityStyle = {\n    opacity: visible ? 1 : 0,\n  };\n  return (\n    <Container style={visibilityStyle}>\n      {operation ? (\n        <Operation>\n          <img src={operation.image} width=\"16\" alt={operation.name} />\n        </Operation>\n      ) : null}\n      {buttons.map((button) =>\n        button ? (\n          <Button\n            key={button.name}\n            onClick={(event) => {\n              button.callback();\n              event.stopPropagation();\n            }}\n            title={button.name}\n          >\n            <img src={button.image} width=\"12\" alt={button.name} />\n          </Button>\n        ) : null\n      )}\n      {copyString ? (\n        <CopyToClipboard text={copyString}>\n          <Button title={`copy \"${copyString}\"`}>\n            <img src={copy} width=\"12\" alt={`copy ${copyString}`} />\n          </Button>\n        </CopyToClipboard>\n      ) : null}\n    </Container>\n  );\n}\n\ntype TMainControlsProps = {\n  visible?: boolean;\n  onAdd?: () => void;\n  onRemove?: () => void;\n  onEdit?: () => void;\n  onSources?: () => void;\n  copyString?: string;\n};\n\nexport function MainControls({\n  visible,\n  onAdd,\n  onRemove,\n  onEdit,\n  onSources,\n  copyString,\n}: TMainControlsProps) {\n  return (\n    <Controls\n      visible={visible}\n      buttons={[\n        onAdd && { name: \"add\", image: add, callback: onAdd },\n        onRemove && { name: \"remove\", image: trash, callback: onRemove },\n        onEdit && { name: \"edit\", image: edit, callback: onEdit },\n        onSources && {\n          name: \"show in sources\",\n          image: code,\n          callback: onSources,\n        },\n      ]}\n      copyString={copyString}\n    />\n  );\n}\n\ntype TConfirmControlsProps = {\n  editMode?: boolean;\n  onConfirm: () => void;\n  onCancel: () => void;\n};\n\nexport function ConfirmControls({\n  onConfirm,\n  onCancel,\n  editMode,\n}: TConfirmControlsProps) {\n  const name = editMode ? \"edit\" : \"remove\";\n  return (\n    <Controls\n      operation={{\n        name,\n        image: editMode ? edit : trash,\n      }}\n      buttons={[\n        { name: `confirm ${name}`, image: confirm, callback: onConfirm },\n        { name: `cancel ${name}`, image: cancel, callback: onCancel },\n      ]}\n    />\n  );\n}\n\ntype TAddControlsProps = {\n  onObject: () => void;\n  onValue: () => void;\n  onCancel: () => void;\n};\n\nexport function AddControls({\n  onObject,\n  onValue,\n  onCancel,\n}: TAddControlsProps) {\n  return (\n    <Controls\n      operation={{\n        name: \"add\",\n        image: add,\n      }}\n      buttons={[\n        { name: \"section\", image: section, callback: onObject },\n        { name: \"value\", image: value, callback: onValue },\n        { name: \"cancel\", image: cancel, callback: onCancel },\n      ]}\n    />\n  );\n}\n\nconst Container = styled.div`\n  cursor: default;\n`;\n\nconst Operation = styled.span`\n  font-size: 10px;\n  opacity: 0.8;\n`;\n","import { useEffect, useState } from \"react\";\nimport { MainControls, ConfirmControls, AddControls } from \"./Controls\";\nimport { NodeType } from \"../../protocol\";\nimport { useEscapeKey } from \"../util\";\n\nexport enum ConfirmationModes {\n  remove = \"REMOVE_MODE\",\n  edit = \"EDIT_MODE\",\n  add = \"ADD_MODE\",\n}\n\ntype TControlsContainerProps = {\n  editing?: boolean;\n  visible?: boolean;\n  onAdd?: (type: NodeType) => void;\n  onRemove?: () => void;\n  onConfirmEdit?: () => void;\n  onCancelEdit?: () => void;\n  onBeginEdit?: () => void;\n  onSources?: () => void;\n  copyString?: string;\n};\n\nexport const ControlsContainer = ({\n  editing,\n  visible,\n  onAdd,\n  onRemove,\n  onConfirmEdit,\n  onCancelEdit,\n  onBeginEdit = () => {},\n  onSources,\n  copyString,\n}: TControlsContainerProps) => {\n  const [mode, setMode] = useState(\n    editing ? ConfirmationModes.edit : undefined\n  );\n  useEffect(() => {\n    setMode(editing ? ConfirmationModes.edit : undefined);\n  }, [editing]);\n\n  function withResetMode(fn?: () => void) {\n    return () => {\n      setMode(undefined);\n      fn?.();\n    };\n  }\n\n  useEscapeKey(\n    mode &&\n      withResetMode(mode === ConfirmationModes.edit ? onCancelEdit : undefined)\n  );\n\n  switch (mode) {\n    case ConfirmationModes.add:\n      return (\n        <AddControls\n          // @ts-ignore\n          onObject={withResetMode(() => onAdd?.(NodeType.OBJECT))}\n          // @ts-ignore\n          onValue={withResetMode(() => onAdd?.(NodeType.VALUE))}\n          onCancel={withResetMode()}\n        />\n      );\n    case ConfirmationModes.remove:\n    case ConfirmationModes.edit:\n      return (\n        <ConfirmControls\n          editMode={mode === ConfirmationModes.edit}\n          onConfirm={withResetMode(\n            mode === ConfirmationModes.edit ? onConfirmEdit : onRemove\n          )}\n          onCancel={withResetMode(\n            mode === ConfirmationModes.edit ? onCancelEdit : undefined\n          )}\n        />\n      );\n    default:\n      return (\n        <MainControls\n          visible={visible}\n          copyString={copyString}\n          onAdd={onAdd && (() => setMode(ConfirmationModes.add))}\n          onRemove={onRemove && (() => setMode(ConfirmationModes.remove))}\n          onEdit={\n            onConfirmEdit &&\n            (() => {\n              setMode(ConfirmationModes.edit);\n              onBeginEdit?.();\n            })\n          }\n          onSources={onSources}\n        />\n      );\n  }\n};\n\nexport default ControlsContainer;\n","import { useEffect } from \"react\";\n\nexport const useEscapeKey = (onEscape?: () => void) => {\n  useEffect(() => {\n    if (!onEscape) return;\n    const handleEsc = (event: KeyboardEvent) => {\n      if (event.keyCode === 27) onEscape();\n    };\n    window.addEventListener(\"keydown\", handleEsc);\n\n    return () => {\n      window.removeEventListener(\"keydown\", handleEsc);\n    };\n  }, [onEscape]);\n};\n\nexport const getUrlParams = () => {\n  const url = new URL(window.location.href);\n  const deepLKey = url.searchParams.get(\"deepLKey\") || undefined;\n  const sessionId = url.searchParams.get(\"sessionId\") || undefined;\n  const languages = url.searchParams.getAll(\"language\");\n  return { deepLKey, sessionId, languages };\n};\n\nexport const setUrlParam = (name: string, value: string | string[]) => {\n  const url = new URL(window.location.href);\n  if (typeof value === \"string\") {\n    url.searchParams.set(name, value);\n  } else {\n    url.searchParams.delete(name);\n    value.forEach((v) => url.searchParams.append(name, v));\n  }\n  window.history.pushState({}, \"\", url.href);\n};\n","import React, { useCallback, useState } from \"react\";\nimport { googleTranslate, deepl } from \"../images\";\nimport { Button } from \"./Button\";\nimport deepLTranslate from \"deepl\";\nimport { getUrlParams } from \"../util\";\n\ntype TGoogleTranslateButtonProps = {\n  text: string;\n  fromLanguage: string;\n  toLanguage: string;\n};\n\nexport function GoogleTranslateButton({\n  text,\n  fromLanguage,\n  toLanguage,\n}: TGoogleTranslateButtonProps) {\n  const title = \"Open on GoogleTranslate\";\n  return (\n    <a\n      href={`https://translate.google.com/?sl=${encodeURIComponent(\n        fromLanguage\n      )}&tl=${encodeURIComponent(toLanguage)}&text=${encodeURIComponent(text)}`}\n      target=\"_blank\"\n      rel=\"noreferrer\"\n    >\n      <Button title={title}>\n        <img src={googleTranslate} width=\"12\" alt={title} />\n      </Button>\n    </a>\n  );\n}\n\nconst { deepLKey } = getUrlParams();\n\ntype TDeepLTranslateButtonProps = {\n  text: string;\n  fromLanguage: string;\n  toLanguage: string;\n  onResult: (text: string) => void;\n};\n\nexport function DeepLTranslateButton({\n  text,\n  fromLanguage,\n  toLanguage,\n  onResult,\n}: TDeepLTranslateButtonProps) {\n  const title = \"Translate with DeepL\";\n  const [loading, setLoading] = useState(false);\n  const onClick = useCallback(() => {\n    if (!deepLKey) return;\n    setLoading(true);\n    deepLTranslate({\n      text,\n      // @ts-ignore\n      source_lang: fromLanguage.toUpperCase(),\n      // @ts-ignore\n      target_lang: toLanguage.toUpperCase(),\n      auth_key: deepLKey,\n      free_api: deepLKey.endsWith(\":fx\"),\n    })\n      .then((result) => onResult(result.data.translations[0].text))\n      .catch((error) => console.error(error))\n      .finally(() => setLoading(false));\n  }, [text, fromLanguage, toLanguage, onResult]);\n\n  return !deepLKey ? null : (\n    <Button title={title} onClick={onClick} loading={loading}>\n      <img src={deepl} width=\"12\" alt={title} />\n    </Button>\n  );\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { MatchType, TSourceMatch } from \"../../protocol\";\nimport { vscode } from \"../images\";\n\nexport function SourceMatch({\n  id,\n  file,\n  line,\n  contextStartLine,\n  context,\n  type,\n}: TSourceMatch) {\n  let idPosition: number | undefined =\n    context[line - contextStartLine]?.indexOf(id);\n  idPosition = idPosition === -1 ? undefined : idPosition;\n\n  return (\n    <Container type={type}>\n      <Header>\n        <File title=\"Open in VSCode\">\n          <FileName>{file}</FileName>:{line}\n        </File>\n      </Header>\n      {context.map((l, index) => {\n        const highlighted = line === index + contextStartLine;\n        let content = <LineContent>{l}</LineContent>;\n        if (highlighted && idPosition !== undefined) {\n          content = (\n            <>\n              <LineContent>{l.substring(0, idPosition)}</LineContent>\n              <LineContent highlighted>{id}</LineContent>\n              <LineContent>{l.substring(idPosition + id.length)}</LineContent>\n            </>\n          );\n        }\n        return (\n          <Line key={index} highlighted={highlighted} type={type}>\n            <LineNumber highlighted={highlighted}>\n              {index + contextStartLine}\n            </LineNumber>\n            {content}\n          </Line>\n        );\n      })}\n    </Container>\n  );\n}\n\nconst Container = styled.div`\n  border: 0.5px solid black;\n  border-color: ${({ type }: { type: MatchType }) =>\n    type === MatchType.EXACT ? \"black\" : \"darkseagreen\"};\n  font-family: monospace, monospace;\n`;\nconst Header = styled.div`\n  background-color: lightgrey;\n  padding: 0 8px;\n`;\nconst File = styled.span`\n  &:hover {\n    text-decoration: underline;\n    cursor: pointer;\n    :after {\n      padding-left: 4px;\n      content: url(${vscode});\n    }\n  }\n`;\nconst FileName = styled.span`\n  font-weight: bold;\n`;\nconst Line = styled.div`\n  background-color: ${({\n    highlighted,\n    type,\n  }: {\n    highlighted?: boolean;\n    type: MatchType;\n  }) =>\n    highlighted\n      ? type === MatchType.EXACT\n        ? \"lightgreen\"\n        : \"darkseagreen\"\n      : \"transparent\"};\n  margin: 0 8px;\n`;\nconst LineNumber = styled.span`\n  color: ${({ highlighted }: { highlighted?: boolean }) =>\n    highlighted ? \"black\" : \"lightgrey\"};\n  margin: 0 8px;\n  user-select: none;\n`;\nconst LineContent = styled.pre`\n  display: inline;\n  margin: 0;\n  font-weight: ${({ highlighted }: { highlighted?: boolean }) =>\n    highlighted ? \"bold\" : \"normal\"};\n`;\n","import { useState, useContext, useEffect, useCallback } from \"react\";\nimport SmoothCollapse from \"react-smooth-collapse\";\nimport ControlsContainer from \"./components/ControlsContainer\";\nimport styled from \"styled-components\";\nimport { TreeContext } from \"./Context\";\nimport { useEscapeKey } from \"./util\";\nimport {\n  GoogleTranslateButton,\n  DeepLTranslateButton,\n} from \"./components/TranslateButton\";\nimport { Problem, extractPlaceholders } from \"./problem\";\nimport { isEqual } from \"lodash\";\nimport { SourceMatch } from \"./components/SourceMatch\";\nimport { TValueNode } from \"../protocol\";\n\ntype TValueProps = {\n  language: string;\n  editing: boolean;\n  value: string;\n  onChange: (v: string) => void;\n  onEdit: (v: boolean) => void;\n  issues: Array<{\n    problem: Problem;\n    hint: string;\n  }>;\n  hintForTranslation?: {\n    language: string;\n    value: string;\n  };\n};\nfunction Value({\n  language,\n  editing,\n  value,\n  onChange,\n  onEdit,\n  issues,\n  hintForTranslation,\n}: TValueProps) {\n  const [autoFocus, setAutoFocus] = useState(false);\n  const [focused, setFocused] = useState(false);\n  const [inputStyle, setInputStyle] =\n    useState<{\n      width: number;\n      height: number;\n      maxWidth: number;\n    }>();\n  useEffect(() => {\n    if (!editing) {\n      setAutoFocus(false);\n      setFocused(false);\n    }\n  }, [editing]);\n\n  const cancelEdit = useCallback(() => onEdit(false), [onEdit]);\n  const change = useCallback(\n    (event) => {\n      onChange(event.target.value);\n      setAutoFocus(false);\n    },\n    [onChange]\n  );\n  useEscapeKey(editing ? cancelEdit : undefined);\n\n  return (\n    <ValueContainer>\n      <LanguageTag>{language}</LanguageTag>\n      {editing ? (\n        <>\n          <ValueEditor\n            style={inputStyle}\n            onFocus={() => setFocused(true)}\n            autoFocus={autoFocus}\n            value={value || \"\"}\n            onChange={change}\n            ref={(elem) => {\n              if (elem && autoFocus) elem.select();\n            }}\n          />\n          {focused && hintForTranslation ? (\n            <ValueButtons>\n              <DeepLTranslateButton\n                text={hintForTranslation.value}\n                fromLanguage={hintForTranslation.language}\n                toLanguage={language}\n                onResult={onChange}\n              />\n              <GoogleTranslateButton\n                text={hintForTranslation.value}\n                fromLanguage={hintForTranslation.language}\n                toLanguage={language}\n              />\n            </ValueButtons>\n          ) : null}\n        </>\n      ) : (\n        <ValueWrapper\n          problems={issues.map(({ problem }) => problem)}\n          title={\n            issues.length\n              ? issues.map(({ hint }) => hint).join(\"\\n\")\n              : undefined\n          }\n          onDoubleClick={() => {\n            setAutoFocus(true);\n            onEdit(true);\n          }}\n          ref={(elem) => {\n            if (elem) {\n              const width = elem.offsetWidth;\n              const height = elem.offsetHeight;\n              const left = elem.offsetLeft || 0;\n              if (\n                inputStyle?.width !== width ||\n                inputStyle?.height !== height\n              ) {\n                setInputStyle({\n                  width,\n                  height,\n                  maxWidth: document.body.offsetWidth - left - 100,\n                });\n              }\n            }\n          }}\n        >\n          {value?.trim()\n            ? value\n            : value === null || value === undefined\n            ? \"<missing>\"\n            : `\"${value}\"`}\n        </ValueWrapper>\n      )}\n    </ValueContainer>\n  );\n}\n\ntype TValueNodeProps = {\n  node: TValueNode;\n};\nexport function ValueNode({ node }: TValueNodeProps) {\n  const [showControls, setShowControls] = useState(false);\n  const [showSources, setShowSources] = useState(false);\n  const [editing, setEditing] = useState(false);\n  const [values, setValues] = useState(node.values);\n  const {\n    languages,\n    onChangeValue,\n    onRemove,\n    problematicTranslations,\n    disabled,\n  } = useContext(TreeContext);\n\n  useEscapeKey(showSources ? () => setShowSources(false) : undefined);\n\n  const onCancelEdit = useCallback(() => {\n    setValues(node.values);\n    setEditing(false);\n  }, [node]);\n\n  useEffect(() => {\n    if (disabled) {\n      onCancelEdit();\n    }\n  }, [disabled, onCancelEdit]);\n\n  const problems =\n    problematicTranslations\n      ?.filter(({ id }) => id === node.id)\n      .map(({ problem }) => problem) || [];\n\n  const problemHints = [];\n  if (problems.includes(Problem.NO_MATCH_IN_SOURCES))\n    problemHints.push(\"\\u26A0 No match found in the sources\");\n  if (problems.includes(Problem.PARTIAL_MATCH_IN_SOURCES))\n    problemHints.push(\"\\u26A0 Partial match in sourcefiles\");\n\n  const hasSourceMatches =\n    node.exactSourceMatches?.length || node.partialSourceMatches?.length;\n  return (\n    <>\n      <Container\n        onMouseEnter={() => setShowControls(true)}\n        onMouseLeave={() => setShowControls(false)}\n      >\n        <Label\n          title={\n            problemHints.length\n              ? `${node.id}\\n${problemHints.join(\"\\n\")}`\n              : node.id\n          }\n          problems={problems}\n        >\n          {node.name}\n        </Label>\n        <ValuesContainer>\n          {languages?.map((language) => {\n            const value = values[language];\n            const issues = [];\n\n            if (\n              problems.includes(Problem.MISSING) &&\n              (value === undefined || value === null)\n            ) {\n              issues.push({\n                problem: Problem.MISSING,\n                hint: \"\\u26A0 issue: Missing value\",\n              });\n            } else if (problems.includes(Problem.EMPTY) && !value?.trim()) {\n              issues.push({\n                problem: Problem.EMPTY,\n                hint: \"\\u26A0 Potential issue: Empty value\",\n              });\n            }\n\n            if (problems.includes(Problem.DEFAULT) && value === node.id) {\n              issues.push({\n                problem: Problem.DEFAULT,\n                hint: `\\u26A0 Potential issue: Default value used \"${value}\"`,\n              });\n            }\n\n            if (problems.includes(Problem.SAME)) {\n              const sameAsLanguage = Object.keys(values).find(\n                (l) => l !== language && values[l] === value\n              );\n              if (sameAsLanguage)\n                issues.push({\n                  problem: Problem.SAME,\n                  hint: `\\u26A0 Potential issue: The same as the \"${sameAsLanguage}\" version`,\n                });\n            }\n\n            if (problems.includes(Problem.PLACEHOLDER_MISMATCH)) {\n              const differentInLanguage = Object.keys(values).find(\n                (l) =>\n                  l !== language &&\n                  !isEqual(\n                    extractPlaceholders(values[l]),\n                    extractPlaceholders(value)\n                  )\n              );\n              if (differentInLanguage)\n                issues.push({\n                  problem: Problem.PLACEHOLDER_MISMATCH,\n                  hint: `\\u26A0 Potential issue: Different placeholders from the \"${differentInLanguage}\" version`,\n                });\n            }\n\n            const hintLanguage = Object.keys(values).find(\n              (l) => l !== language && values[l] && values[l] !== node.id\n            );\n\n            return (\n              <Value\n                key={language}\n                language={language}\n                editing={editing}\n                issues={issues}\n                value={value}\n                hintForTranslation={\n                  hintLanguage\n                    ? {\n                        language: hintLanguage,\n                        value: values[hintLanguage],\n                      }\n                    : undefined\n                }\n                onChange={(v) => setValues({ ...values, [language]: v })}\n                onEdit={(v) => {\n                  setEditing(!disabled && v);\n                  if (!v) {\n                    setValues(node.values);\n                  }\n                }}\n              />\n            );\n          })}\n        </ValuesContainer>\n        <ControlsContainer\n          visible={showControls || showSources}\n          editing={editing}\n          onBeginEdit={disabled ? undefined : () => setEditing(true)}\n          onConfirmEdit={\n            disabled\n              ? undefined\n              : () => {\n                  languages?.forEach((language) => {\n                    const newValue = values[language];\n                    const oldValue = node.values[language];\n                    if (newValue !== oldValue) {\n                      onChangeValue?.(node.id, language, newValue);\n                    }\n                  });\n                  setEditing(false);\n                }\n          }\n          onCancelEdit={disabled ? undefined : onCancelEdit}\n          onRemove={\n            disabled\n              ? undefined\n              : () => {\n                  onRemove?.(node.id);\n                }\n          }\n          onSources={\n            hasSourceMatches ? () => setShowSources((s) => !s) : undefined\n          }\n          copyString={node.id}\n        />\n      </Container>\n      <Sources>\n        <SmoothCollapse expanded={showSources}>\n          {node.exactSourceMatches?.map((match, index) => (\n            <SourceMatch key={`exact-${index}`} {...match} />\n          ))}\n          {node.partialSourceMatches?.map((match, index) => (\n            <SourceMatch key={`partial-${index}`} {...match} />\n          ))}\n        </SmoothCollapse>\n      </Sources>\n    </>\n  );\n}\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  margin-bottom: 2px;\n`;\n\nconst Label = styled.div`\n  cursor: default;\n  background-color: ${({ problems }: { problems: Problem[] }) =>\n    problems.includes(Problem.MISSING)\n      ? \"salmon\"\n      : problems.includes(Problem.EMPTY) || problems.includes(Problem.DEFAULT)\n      ? \"moccasin\"\n      : problems.includes(Problem.NO_MATCH_IN_SOURCES)\n      ? \"lightgray\"\n      : problems.includes(Problem.PARTIAL_MATCH_IN_SOURCES)\n      ? \"darkseagreen\"\n      : problems.length\n      ? \"lightcyan\"\n      : \"lightgreen\"};\n  font-family: monospace, monospace;\n  padding: 0 8px;\n  border: 0.5px solid black;\n  border-radius: 4px 0 0 4px;\n  display: flex;\n  align-items: center;\n  align-self: stretch;\n`;\n\nconst ValuesContainer = styled.div``;\n\nconst LanguageTag = styled.span`\n  cursor: default;\n  padding: 0 8px;\n  color: white;\n  background-color: black;\n`;\n\nconst Sources = styled.div`\n  padding-left: 20px;\n  margin-bottom: 4px;\n`;\n\nconst ValueContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  font-family: monospace, monospace;\n`;\n\nconst ValueWrapper = styled.div`\n  padding: 0 8px;\n  border: 0.5px solid black;\n  ${({ problems }: { problems: Problem[] }) =>\n    problems.includes(Problem.MISSING)\n      ? \"background-color: red; color: white; font-style: italic; font-family: sans-serif, monospace;\"\n      : problems.includes(Problem.EMPTY)\n      ? \"background-color: orange;\"\n      : problems.length\n      ? \"background-color: lightcyan;\"\n      : \"\"}\n`;\n\nconst ValueEditor = styled.textarea`\n  font-size: 16px;\n  min-height: 1em;\n`;\n\nconst ValueButtons = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n","import { useState, useContext, useCallback, useEffect } from \"react\";\nimport SmoothCollapse from \"react-smooth-collapse\";\nimport ControlsContainer from \"./components/ControlsContainer\";\nimport styled from \"styled-components\";\nimport { TreeContext } from \"./Context\";\nimport { NodeType, TObjectNode } from \"../protocol\";\nimport { ValueNode } from \"./ValueNode\";\nimport { confirm, cancel } from \"./images\";\nimport { Button } from \"./components/Button\";\nimport { useEscapeKey } from \"./util\";\nimport { Problem } from \"./problem\";\n\ntype TObjectNodeProps = {\n  node: TObjectNode;\n};\nexport function ObjectNode({ node }: TObjectNodeProps) {\n  const [expanded, setExpanded] = useState(!node.id);\n  const [showControls, setShowControls] = useState(false);\n  const [addingType, setAddingType] = useState<NodeType>();\n  const [addingLabel, setAddingLabel] = useState(\"\");\n\n  const {\n    onAdd,\n    onRemove,\n    problematicTranslations,\n    filteredIds,\n    disabled,\n    collapseAll,\n    onCollapseChange,\n  } = useContext(TreeContext);\n\n  const stopAdding = useCallback(() => {\n    setAddingType(undefined);\n    setAddingLabel(\"\");\n  }, []);\n\n  useEffect(() => {\n    if (!expanded || disabled) {\n      stopAdding();\n    }\n  }, [disabled, expanded, stopAdding]);\n\n  useEffect(() => {\n    if (collapseAll !== undefined) {\n      setExpanded(!collapseAll);\n    }\n  }, [collapseAll]);\n\n  useEscapeKey(addingType && stopAdding);\n\n  const problems = problematicTranslations\n    ?.filter(({ id }) => id === node.id || id.startsWith(`${node.id}.`))\n    .map(({ problem }) => problem);\n  const mainProblem = problems?.includes(Problem.MISSING)\n    ? Problem.MISSING\n    : problems?.includes(Problem.EMPTY)\n    ? Problem.EMPTY\n    : problems?.includes(Problem.NO_MATCH_IN_SOURCES)\n    ? Problem.NO_MATCH_IN_SOURCES\n    : problems?.includes(Problem.DEFAULT)\n    ? Problem.DEFAULT\n    : problems?.includes(Problem.SAME)\n    ? Problem.SAME\n    : undefined;\n\n  const addingValid =\n    addingLabel &&\n    /^\\w+$/.test(addingLabel) &&\n    !node.children.some(({ name }) => name === addingLabel);\n\n  const onConfirmAdd =\n    addingValid && addingType\n      ? () => {\n          onAdd?.(node.id, addingType, addingLabel);\n          stopAdding();\n        }\n      : undefined;\n\n  const onToggleCollapse = useCallback(() => {\n    onCollapseChange?.();\n    setExpanded((c) => !c);\n  }, [onCollapseChange]);\n  const onMouseEnter = useCallback(() => setShowControls(true), []);\n  const onMouseLeave = useCallback(() => setShowControls(false), []);\n\n  return (\n    <>\n      <NodeContainer\n        onClick={onToggleCollapse}\n        onMouseEnter={onMouseEnter}\n        onMouseLeave={onMouseLeave}\n      >\n        <Label\n          id={node.id}\n          problem={mainProblem}\n          expanded={expanded}\n          title={node.id}\n        >\n          <Caret>{expanded ? \"-\" : \"+\"}</Caret>\n          {node.name}\n        </Label>\n        {expanded ? (\n          !addingType &&\n          !disabled && (\n            <ControlsContainer\n              visible={showControls}\n              onAdd={(type) => setAddingType(type)}\n              onRemove={node.id ? () => onRemove?.(node.id) : undefined}\n            />\n          )\n        ) : (\n          <Collapsed>{`{} ${node.children.length} item${\n            node.children.length === 1 ? \"\" : \"s\"\n          }`}</Collapsed>\n        )}\n      </NodeContainer>\n      {addingType ? (\n        <>\n          <NewItemInput\n            type=\"text\"\n            autoFocus\n            placeholder={\n              addingType === NodeType.OBJECT ? \"new section\" : \"new value\"\n            }\n            onChange={(event) => setAddingLabel(event.target.value.trim())}\n            onKeyPress={(e) => e.key === \"Enter\" && onConfirmAdd?.()}\n          />\n          {addingValid ? (\n            <Button onClick={onConfirmAdd}>\n              <img src={confirm} width=\"16\" alt=\"confirm\" />\n            </Button>\n          ) : null}\n          <Button onClick={stopAdding}>\n            <img src={cancel} width=\"16\" alt=\"cancel\" />\n          </Button>\n        </>\n      ) : null}\n      <SubTree>\n        <SmoothCollapse expanded={expanded}>\n          {node.children.map((n) => {\n            if (\n              filteredIds &&\n              !filteredIds.some(\n                (id) => id === n.id || id.startsWith(`${n.id}.`)\n              )\n            ) {\n              return null;\n            }\n            return n.type === NodeType.OBJECT ? (\n              <ObjectNode key={n.id} node={n} />\n            ) : (\n              <ValueNode key={n.id} node={n} />\n            );\n          })}\n        </SmoothCollapse>\n      </SubTree>\n    </>\n  );\n}\n\nconst getLabelBackground = ({\n  id,\n  problem,\n  expanded,\n}: {\n  id: string;\n  problem?: Problem;\n  expanded: boolean;\n}) => {\n  if (!id) return \"white\";\n  switch (problem) {\n    case Problem.MISSING:\n      return expanded ? \"pink\" : \"salmon\";\n    case Problem.EMPTY:\n    case Problem.DEFAULT:\n      return expanded ? \"white\" : \"moccasin\";\n    case Problem.SAME:\n      return expanded ? \"white\" : \"lightcyan\";\n    case Problem.NO_MATCH_IN_SOURCES:\n      return expanded ? \"white\" : \"lightgrey\";\n    default:\n      return expanded ? \"mintcream\" : \"lightgreen\";\n  }\n};\n\nconst NodeContainer = styled.div`\n  cursor: default;\n  position: relative;\n  display: flex;\n  flex-direction: row;\n`;\n\nconst Caret = styled.span`\n  min-width: 10px;\n  margin-right: 2px;\n`;\n\nconst Label = styled.span`\n  background-color: ${getLabelBackground};\n  font-family: monospace, monospace;\n  padding: 0 8px;\n  border: 0.5px solid black;\n  border-radius: 4px;\n\n  &:hover {\n    font-weight: bold;\n  }\n`;\n\nconst Collapsed = styled.span`\n  color: grey;\n  margin: 0 8px;\n`;\n\nconst SubTree = styled.div`\n  padding-left: 20px;\n  margin-bottom: 4px;\n`;\n\nconst NewItemInput = styled.input`\n  font-family: monospace, monospace;\n  font-size: 16px;\n  padding: 0 8px;\n  margin-left: 20px;\n  margin-bottom: 4px;\n`;\n","import { useEffect, useState } from \"react\";\nimport { NodeType, TObjectNode, TSourceMatch } from \"../protocol\";\nimport {\n  findProblems,\n  NO_PROBLEM,\n  Problem,\n  TFindProblemsResult,\n} from \"./problem\";\nimport { findIDs, findFilteredIDs } from \"./filter\";\nimport { TreeContext } from \"./Context\";\nimport { ObjectNode } from \"./ObjectNode\";\n\ntype TProblemsFilter = Array<Problem | typeof NO_PROBLEM>;\ntype TFilter = {\n  text: string;\n  caseSensitive: boolean;\n  problems: TProblemsFilter;\n};\n\ntype TreeProps = {\n  data: TObjectNode;\n  languages?: string[];\n  sourceMatches?: TSourceMatch[];\n  filter: TFilter;\n  onAdd?: (id: string, type: NodeType, label: string) => void;\n  onChangeValue?: (id: string, language: string, value: string) => void;\n  onRemove?: (id: string) => void;\n  disabled?: boolean;\n  collapseAll?: boolean;\n  onCollapseChange: () => void;\n};\n\nexport default function Tree({\n  data,\n  languages,\n  sourceMatches,\n  filter: { text: textFilter, caseSensitive, problems: problemsFilter },\n  onAdd,\n  onChangeValue,\n  onRemove,\n  disabled,\n  collapseAll,\n  onCollapseChange,\n}: TreeProps) {\n  const [problematicTranslations, setProblematicTranslations] =\n    useState<TFindProblemsResult>([]);\n  useEffect(() => {\n    if (languages?.length) {\n      setProblematicTranslations(findProblems(data, languages, sourceMatches));\n    }\n  }, [sourceMatches, data, languages]);\n\n  const [textFilteredIds, setTextFilteredIds] = useState<string[]>();\n  useEffect(() => {\n    if (data && textFilter) {\n      setTextFilteredIds(findFilteredIDs(data, textFilter, caseSensitive));\n    } else {\n      setTextFilteredIds(undefined);\n    }\n  }, [caseSensitive, textFilter, data]);\n\n  let filteredIds = textFilteredIds;\n  if (data && problemsFilter?.length) {\n    const IDs = textFilteredIds || findIDs(data);\n\n    const problemIdMap = problematicTranslations.reduce<{\n      [id: string]: Problem[];\n    }>((aggr, { id, problem }) => {\n      if (aggr[id]) {\n        aggr[id].push(problem);\n      } else {\n        aggr[id] = [problem];\n      }\n      return aggr;\n    }, {});\n\n    filteredIds = IDs.filter(\n      (id) =>\n        (problemsFilter.includes(NO_PROBLEM) && !problemIdMap[id]) ||\n        problemIdMap[id]?.some((problem) => problemsFilter.includes(problem))\n    );\n  }\n\n  return (\n    <TreeContext.Provider\n      value={{\n        collapseAll,\n        onCollapseChange,\n        disabled,\n        filteredIds,\n        problematicTranslations,\n        languages: languages,\n        onAdd,\n        onChangeValue,\n        onRemove,\n      }}\n    >\n      {data ? <ObjectNode node={data} /> : null}\n    </TreeContext.Provider>\n  );\n}\n","import { cloneDeep } from \"lodash\";\nimport { JsonData, NodeType, TObjectNode } from \"./protocol\";\nimport { getUrlParams } from \"./tree/util\";\n\nexport function add(\n  node: TObjectNode,\n  id: string,\n  type: NodeType,\n  label: string,\n  parentId?: string\n): TObjectNode {\n  const result = parentId ? node : cloneDeep(node);\n  if (!id) {\n    const item = {\n      id: parentId ? `${parentId}.${label}` : label,\n      name: label,\n    };\n\n    const values: Record<string, string> = {};\n    if (type === NodeType.VALUE) {\n      const { languages } = getUrlParams();\n      languages.forEach((l) => {\n        values[l] = item.id;\n      });\n    }\n\n    result.children.push(\n      type === NodeType.OBJECT\n        ? { ...item, type, children: [] }\n        : { ...item, type, values }\n    );\n\n    return result;\n  }\n\n  const [first, ...parts] = id.split(\".\");\n  const child = result.children.find(({ name }) => name === first);\n  if (child?.type === NodeType.OBJECT) {\n    add(\n      child,\n      parts.join(\".\"),\n      type,\n      label,\n      parentId ? `${parentId}.${first}` : first\n    );\n    return result;\n  }\n\n  console.error(\"ADD: Invalid ID\", id, type, node);\n  return result;\n}\n\nexport function changeValue(\n  node: TObjectNode,\n  id: string,\n  language: string,\n  value: string,\n  traversed?: boolean\n): TObjectNode {\n  const result = traversed ? node : cloneDeep(node);\n\n  const [first, ...parts] = id.split(\".\");\n  const child = result.children.find(({ name }) => name === first);\n  if (!child) {\n    console.error(\"CHANGE-VALUE: Invalid ID\", id, node);\n    return result;\n  }\n\n  if (child.type === NodeType.OBJECT) {\n    changeValue(child, parts.join(\".\"), language, value, true);\n  } else {\n    child.values[language] = value;\n  }\n\n  return result;\n}\n\nexport function remove(\n  node: TObjectNode,\n  id: string,\n  traversed?: boolean\n): TObjectNode {\n  const result = traversed ? node : cloneDeep(node);\n\n  const [first, ...parts] = id.split(\".\");\n  const child = result.children.find(({ name }) => name === first);\n  if (!child) {\n    console.error(\"REMOVE: ID not found\", id, node);\n    return result;\n  }\n\n  if (parts.length) {\n    if (child.type !== NodeType.OBJECT) {\n      console.error(\"REMOVE: Invalid type\", id, node);\n      return result;\n    }\n\n    remove(child, parts.join(\".\"), true);\n  } else {\n    result.children = result.children.filter(({ name }) => name !== first);\n  }\n\n  return result;\n}\n\nexport function importJson(\n  node: TObjectNode,\n  data: JsonData,\n  language: string,\n  traversed?: boolean\n): TObjectNode {\n  const result = traversed ? node : cloneDeep(node);\n\n  Object.keys(data).forEach((key) => {\n    const value = data[key];\n    const type = typeof value === \"string\" ? NodeType.VALUE : NodeType.OBJECT;\n    const current = result.children.find(({ name }) => name === key);\n\n    if (type === NodeType.OBJECT && !value) return;\n    if (current && current.type !== type) {\n      throw new Error(\n        `Mismatch types: ${current.id}: current=${current.type}, imported=${type}`\n      );\n    }\n\n    if (current) {\n      if (current.type === NodeType.VALUE) {\n        current.values[language] = value as string;\n      } else {\n        importJson(current, value as JsonData, language, true);\n      }\n    } else {\n      const id = result.id ? `${result.id}.${key}` : key;\n      if (type === NodeType.VALUE) {\n        const values: Record<string, string> = {};\n        const { languages } = getUrlParams();\n        languages.forEach((l) => {\n          values[l] = id;\n        });\n        values[language] = value as string;\n        result.children.push({ id, name: key, type, values });\n      } else {\n        const newNode: TObjectNode = { id, name: key, type, children: [] };\n        importJson(newNode, value as JsonData, language, true);\n        result.children.push(newNode);\n      }\n    }\n  });\n\n  return result;\n}\n\nexport function exportJson(node: TObjectNode, language: string): JsonData {\n  const result: JsonData = {};\n\n  node.children.forEach((item) => {\n    if (item.type === NodeType.VALUE) {\n      if (language in item.values) {\n        result[item.name] = item.values[language];\n      }\n    } else {\n      result[item.name] = exportJson(item, language);\n    }\n  });\n\n  return result;\n}\n","import { JsonData, NodeType, TObjectNode } from \"./protocol\";\nimport { getUrlParams, setUrlParam } from \"./tree/util\";\nimport Parse from \"parse\";\nimport { initializeParse, useParseQuery } from \"@parse/react\";\nimport { useEffect, useMemo, useState } from \"react\";\nimport { add, changeValue, importJson, remove } from \"./action\";\n\ninitializeParse(\n  \"https://translation.b4a.io/\",\n  \"ZqSPDyNGkCzQYoQfxgGEUgpO4tp9Rc7z4DhJQNWI\",\n  \"6aZHlL6cm2kX99WmKTATP7rZUCGvPmNNpFF76EqM\"\n);\n\ninterface TTranslation {\n  data: TObjectNode;\n}\n\nconst { sessionId: initialSessionId } = getUrlParams();\n\ntype UseParseResult = {\n  data?: TObjectNode;\n  onAdd?: (id: string, type: NodeType, label: string) => void;\n  onChangeValue?: (id: string, language: string, value: string) => void;\n  onRemove?: (id: string) => void;\n  onImportJson?: (language: string, json: JsonData) => void;\n};\n\nexport function useParse(): UseParseResult {\n  const [sessionId, setSession] = useState(initialSessionId);\n  const { results: translations } = useParseQuery<Parse.Object<TTranslation>>(\n    useMemo(() => {\n      const query = new Parse.Query<Parse.Object<TTranslation>>(\"Translation\");\n      return sessionId ? query.equalTo(\"objectId\", sessionId) : query;\n    }, [sessionId]),\n    {\n      enableLocalDatastore: true,\n      enableLiveQuery: true,\n    }\n  );\n\n  useEffect(() => {\n    if (!sessionId) {\n      const newSession = new Parse.Object<TTranslation>(\"Translation\", {\n        data: {\n          id: \"\",\n          name: \"root\",\n          type: NodeType.OBJECT,\n          children: [],\n        },\n      });\n      newSession\n        .save()\n        .then((s) => {\n          setSession(s.id);\n          setUrlParam(\"sessionId\", s.id);\n        })\n        .catch((e) => console.error(e));\n    }\n  }, [sessionId]);\n\n  const object = translations?.[0];\n  const data = object?.attributes.data;\n  const applyModification = (newData: TObjectNode) => {\n    object?.set({ data: newData });\n    object?.save();\n  };\n  return {\n    data,\n    onAdd:\n      data &&\n      ((id: string, type: NodeType, label: string) =>\n        applyModification(add(data, id, type, label))),\n    onChangeValue:\n      data &&\n      ((id: string, language: string, value: string) =>\n        applyModification(changeValue(data, id, language, value))),\n    onRemove: data && ((id: string) => applyModification(remove(data, id))),\n    onImportJson:\n      data &&\n      ((language: string, json: JsonData) =>\n        applyModification(importJson(data, json, language))),\n  };\n}\n","import { useCallback, useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { getUrlParams, setUrlParam } from \"./tree/util\";\n\ntype Languages = Record<string, string>;\nconst SUPPORTED_LANGUAGES: Languages = {\n  ar: \"Arabic\",\n  bn: \"Bengali\",\n  bg: \"Bulgarian\",\n  ca: \"Catalan\",\n  hr: \"Croatian\",\n  cs: \"Czech\",\n  da: \"Danish\",\n  nl: \"Dutch\",\n  en: \"English\",\n  et: \"Estonian\",\n  fil: \"Filipino\",\n  fi: \"Finnish\",\n  fr: \"French\",\n  de: \"German\",\n  el: \"Greek\",\n  iw: \"Hebrew\",\n  hi: \"Hindi\",\n  hu: \"Hungarian\",\n  is: \"Icelandic\",\n  id: \"Indonesian\",\n  it: \"Italian\",\n  ja: \"Japanese\",\n  ko: \"Korean\",\n  lv: \"Latvian\",\n  lt: \"Lithuanian\",\n  ms: \"Malay\",\n  no: \"Norwegian\",\n  pl: \"Polish\",\n  pt: \"Portuguese\",\n  ro: \"Romanian\",\n  ru: \"Russian\",\n  sr: \"Serbian\",\n  zh: \"Chinese\",\n  sk: \"Slovak\",\n  sl: \"Slovenian\",\n  es: \"Spanish\",\n  sw: \"Swahili\",\n  sv: \"Swedish\",\n  th: \"Thai\",\n  tr: \"Turkish\",\n  uk: \"Ukrainian\",\n  vi: \"Vietnamese\",\n};\n\nasync function getDeepLLanguages(deepLKey: string) {\n  const freeApi = deepLKey?.endsWith(\":fx\");\n  const url = new URL(\n    `https://${freeApi ? \"api-free\" : \"api\"}.deepl.com/v2/languages`\n  );\n  url.searchParams.append(\"auth_key\", deepLKey);\n  return fetch(url.href)\n    .then((response) => response.json())\n    .then((data: Array<{ name: string; language: string }>) =>\n      data.reduce<Languages>(\n        (aggr, { name, language }) => ({\n          ...aggr,\n          [language.toLowerCase()]: name,\n        }),\n        {}\n      )\n    );\n}\n\nfunction sortAlphabetically(a: string, b: string) {\n  return a < b ? -1 : a > b ? 1 : 0;\n}\n\nexport default function LanguagesSelection(props: {\n  onSelectionChange: (languages: string[]) => void;\n}) {\n  const { onSelectionChange } = props;\n  const [showLanguageSelection, setShowLanguageSelection] = useState(false);\n  const [languages, setLanguages] = useState<string[]>(\n    getUrlParams().languages\n  );\n\n  const updateLanguage = useCallback(\n    (lang: string, enabled: boolean) => {\n      const updated = enabled\n        ? [...languages, lang]\n        : languages.filter((x) => x !== lang);\n      setLanguages(updated);\n      setUrlParam(\"language\", updated);\n    },\n    [languages]\n  );\n\n  useEffect(() => {\n    onSelectionChange(languages);\n  }, [languages, onSelectionChange]);\n\n  const [supportedLanguages, setSupportedLanguages] =\n    useState<Languages>(SUPPORTED_LANGUAGES);\n  useEffect(() => {\n    const { deepLKey } = getUrlParams();\n    if (deepLKey) {\n      getDeepLLanguages(deepLKey).then(setSupportedLanguages);\n    }\n  }, []);\n\n  return (\n    <SelectionWrapper>\n      <button onClick={() => setShowLanguageSelection((s) => !s)}>\n        Languages\n      </button>\n      {showLanguageSelection && (\n        <Selection>\n          {Object.keys(supportedLanguages)\n            .sort((a, b) =>\n              sortAlphabetically(supportedLanguages[a], supportedLanguages[b])\n            )\n            .map((code) => (\n              <span key={code}>\n                <CheckBox\n                  type=\"checkbox\"\n                  name={supportedLanguages[code]}\n                  checked={languages.includes(code)}\n                  onChange={(event) =>\n                    updateLanguage(code, event.target.checked)\n                  }\n                />\n                {supportedLanguages[code]}\n              </span>\n            ))}\n        </Selection>\n      )}\n    </SelectionWrapper>\n  );\n}\n\nconst SelectionWrapper = styled.div`\n  position: relative;\n`;\n\nconst Selection = styled.div`\n  position: absolute;\n  background-color: #ffffff;\n  border: 0.5px solid black;\n  padding: 10px;\n  display: flex;\n  flex-direction: column;\n  z-index: 1;\n  min-width: 120px;\n`;\n\nconst CheckBox = styled.input`\n  margin-right: 8px;\n`;\n","import styled from \"styled-components\";\n\nexport default function TreeCollapse(props: {\n  collapseAll?: boolean;\n  onCollapseAll: (collapse: boolean) => void;\n}) {\n  return (\n    <Collapse>\n      <span>\n        <button\n          disabled={props.collapseAll === false}\n          onClick={() => props.onCollapseAll(false)}\n          title=\"Expand All\"\n        >\n          +\n        </button>\n        <button\n          disabled={props.collapseAll}\n          onClick={() => props.onCollapseAll(true)}\n          title=\"Collapse All\"\n        >\n          -\n        </button>\n      </span>\n    </Collapse>\n  );\n}\n\nconst Collapse = styled.div`\n  flex: 1;\n  display: flex;\n  justify-content: space-around;\n`;\n","import { useState } from \"react\";\nimport { Problem, NO_PROBLEM } from \"./tree/problem\";\nimport styled from \"styled-components\";\n\nexport type SelectedProblem = Problem | typeof NO_PROBLEM;\nexport const ALL_PROBLEMS = (\n  [NO_PROBLEM, ...Object.values(Problem)] as Array<SelectedProblem>\n).filter(\n  (p) =>\n    p !== Problem.NO_MATCH_IN_SOURCES && p !== Problem.PARTIAL_MATCH_IN_SOURCES\n);\n\nexport default function ProblemsSelection(props: {\n  filteredProblems: Array<SelectedProblem>;\n  onChange: (newSelection: Array<SelectedProblem>) => void;\n}) {\n  const { filteredProblems, onChange } = props;\n  const [showProblemsSelection, setShowProblemsSelection] = useState(false);\n\n  return (\n    <SelectionWrapper>\n      <button onClick={() => setShowProblemsSelection((s) => !s)}>\n        Problems\n      </button>\n      {showProblemsSelection && (\n        <Selection>\n          {ALL_PROBLEMS.map((v) => (\n            <span key={v}>\n              <input\n                type=\"checkbox\"\n                name={v}\n                checked={filteredProblems.includes(v)}\n                onChange={(event) =>\n                  onChange(\n                    event.target.checked\n                      ? [...filteredProblems, v]\n                      : filteredProblems.filter((x) => x !== v)\n                  )\n                }\n              />\n              {v}\n            </span>\n          ))}\n        </Selection>\n      )}\n    </SelectionWrapper>\n  );\n}\n\nconst SelectionWrapper = styled.div`\n  position: relative;\n`;\n\nconst Selection = styled.div`\n  position: absolute;\n  background-color: #ffffff;\n  border: 0.5px solid black;\n  padding: 10px;\n  display: flex;\n  flex-direction: column;\n  z-index: 1;\n`;\n","import { ChangeEvent, useCallback, useEffect, useRef, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { JsonData } from \"./protocol\";\nimport { getUrlParams, useEscapeKey } from \"./tree/util\";\nimport Dropzone from \"react-dropzone\";\n\nfunction checkJson(text: string): JsonData | null {\n  try {\n    return JSON.parse(text);\n  } catch (e) {\n    return null;\n  }\n}\n\nexport default function Import(props: {\n  onImport: (language: string, data: JsonData) => void;\n}) {\n  const { onImport } = props;\n  const jsonInput = useRef<HTMLTextAreaElement>(null);\n\n  const [showContainer, setShowContainer] = useState(false);\n  const [language, setLanguage] = useState<string>();\n  const [valid, setValid] = useState(false);\n  const [error, setError] = useState<string>();\n\n  const handleOpen = useCallback(() => {\n    if (showContainer) {\n      setShowContainer(false);\n      return;\n    }\n    const { languages } = getUrlParams();\n    if (!languages.length) return;\n    if (!language) {\n      setLanguage(languages[0]);\n    }\n    setShowContainer(true);\n  }, [language, showContainer]);\n\n  useEscapeKey(\n    useCallback(() => {\n      setShowContainer(false);\n    }, [])\n  );\n\n  useEffect(() => {\n    if (!showContainer) setError(undefined);\n  }, [showContainer]);\n\n  const handleSubmit = useCallback(() => {\n    if (!language) {\n      setError(\"No language\");\n      return;\n    }\n\n    setError(undefined);\n    const data = checkJson(jsonInput.current?.value as string);\n    if (!data) {\n      setError(\"Invalid JSON\");\n      return;\n    }\n\n    try {\n      onImport(language, data);\n      setError(\"Success!\");\n    } catch (e) {\n      setError(\"Import failed: \" + e.toString());\n      return;\n    }\n  }, [language, onImport]);\n\n  const handleFileDrop = useCallback((files: File[]) => {\n    files[0]\n      .text()\n      .then((text) => {\n        setError(undefined);\n        if (jsonInput.current) {\n          jsonInput.current.value = text;\n          setValid(checkJson(text) !== null);\n        }\n      })\n      .catch((e) => setError(e.toString()));\n  }, []);\n\n  const onChange = useCallback((event: ChangeEvent<HTMLTextAreaElement>) => {\n    setValid(checkJson(event.target.value) !== null);\n  }, []);\n\n  return (\n    <Wrapper>\n      <button onClick={handleOpen}>Import</button>\n      {showContainer && (\n        <Container>\n          <NonSelectable>\n            Language:{\" \"}\n            <select\n              value={language}\n              onChange={(event) => setLanguage(event.target.value)}\n            >\n              {getUrlParams().languages.map((v) => (\n                <option key={v} value={v}>\n                  {v}\n                </option>\n              ))}\n            </select>\n          </NonSelectable>\n          <Dropzone maxFiles={1} onDrop={handleFileDrop}>\n            {({ getRootProps, isDragActive, isDragReject }) => (\n              <FileDropWrapper\n                {...getRootProps()}\n                isDragActive={isDragActive}\n                isDragReject={isDragReject}\n              >\n                <NonSelectable>\n                  JSON: <JSONInput ref={jsonInput} onChange={onChange} />\n                </NonSelectable>\n              </FileDropWrapper>\n            )}\n          </Dropzone>\n\n          <SubmitButton disabled={!language || !valid} onClick={handleSubmit}>\n            Import\n          </SubmitButton>\n          <span>{error}</span>\n        </Container>\n      )}\n    </Wrapper>\n  );\n}\n\nconst Wrapper = styled.div`\n  position: relative;\n`;\n\nconst Container = styled.div`\n  position: absolute;\n  background-color: #ffffff;\n  border: 0.5px solid black;\n  padding: 10px;\n  display: flex;\n  flex-direction: column;\n  z-index: 1;\n`;\n\nconst JSONInput = styled.textarea`\n  font-family: monospace, monospace;\n  font-size: 16px;\n  padding: 0 8px;\n  min-width: min(50vw, 400px);\n  height: min(50vh, 400px);\n`;\n\nconst NonSelectable = styled.span`\n  -webkit-touch-callout: none;\n  -webkit-user-select: none;\n  -khtml-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  user-select: none;\n`;\n\nconst SubmitButton = styled.button`\n  align-self: flex-end;\n  margin-top: 1em;\n`;\n\nconst FileDropWrapper = styled.div`\n  border: ${(props: { isDragActive: boolean; isDragReject: boolean }) =>\n    props.isDragActive\n      ? \"4px dashed \" + (props.isDragReject ? \"red\" : \"green\")\n      : \"none\"};\n`;\n","import { useCallback, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { exportJson } from \"./action\";\nimport { JsonData, TObjectNode } from \"./protocol\";\nimport { getUrlParams, useEscapeKey } from \"./tree/util\";\n\nfunction download(language: string, data: JsonData) {\n  const element = document.createElement(\"a\");\n  const file = new Blob([JSON.stringify(data, undefined, 2)], {\n    type: \"application/json;charset=utf-8\",\n  });\n  element.href = URL.createObjectURL(file);\n  element.download = `${language}.json`;\n\n  document.body.appendChild(element);\n  element.click();\n  document.body.removeChild(element);\n}\n\nfunction copyToClipboard(data: JsonData) {\n  const text = JSON.stringify(data, undefined, 2);\n  if (navigator.clipboard) {\n    navigator.clipboard.writeText(text);\n    return;\n  }\n\n  const textArea = document.createElement(\"textarea\");\n  textArea.value = text;\n\n  // Avoid scrolling to bottom\n  textArea.style.top = \"0\";\n  textArea.style.left = \"0\";\n  textArea.style.position = \"fixed\";\n\n  document.body.appendChild(textArea);\n  textArea.focus();\n  textArea.select();\n\n  try {\n    document.execCommand(\"copy\");\n  } catch (err) {\n    console.error(\"Unable to copy\", err);\n  }\n\n  document.body.removeChild(textArea);\n}\n\nexport default function Export(props: { data: TObjectNode }) {\n  const { data } = props;\n\n  const [showContainer, setShowContainer] = useState(false);\n  const [language, setLanguage] = useState<string>();\n\n  const handleOpen = useCallback(() => {\n    if (showContainer) {\n      setShowContainer(false);\n      return;\n    }\n    const { languages } = getUrlParams();\n    if (!languages.length) return;\n    if (!language) {\n      setLanguage(languages[0]);\n    }\n    setShowContainer(true);\n  }, [language, showContainer]);\n\n  useEscapeKey(\n    useCallback(() => {\n      setShowContainer(false);\n    }, [])\n  );\n\n  const handleDownload = useCallback(() => {\n    if (language) download(language, exportJson(data, language));\n  }, [data, language]);\n\n  const handleCopyToClipboard = useCallback(() => {\n    if (language) copyToClipboard(exportJson(data, language));\n  }, [data, language]);\n\n  return (\n    <Wrapper>\n      <button onClick={handleOpen}>Export</button>\n      {showContainer && (\n        <Container>\n          <NonSelectable>\n            Language:{\" \"}\n            <select\n              value={language}\n              onChange={(event) => setLanguage(event.target.value)}\n            >\n              {getUrlParams().languages.map((v) => (\n                <option key={v} value={v}>\n                  {v}\n                </option>\n              ))}\n            </select>\n          </NonSelectable>\n\n          <Button disabled={!language} onClick={handleCopyToClipboard}>\n            Copy to clipboard\n          </Button>\n          <Button disabled={!language} onClick={handleDownload}>\n            Download\n          </Button>\n        </Container>\n      )}\n    </Wrapper>\n  );\n}\n\nconst Wrapper = styled.div`\n  position: relative;\n`;\n\nconst Container = styled.div`\n  position: absolute;\n  background-color: #ffffff;\n  border: 0.5px solid black;\n  padding: 10px;\n  display: flex;\n  flex-direction: column;\n  z-index: 1;\n`;\n\nconst NonSelectable = styled.span`\n  -webkit-touch-callout: none;\n  -webkit-user-select: none;\n  -khtml-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  user-select: none;\n`;\n\nconst Button = styled.button`\n  align-self: flex-end;\n  margin-top: 1em;\n`;\n","import Footer from \"./Footer\";\nimport { useCallback, useState } from \"react\";\nimport Tree from \"./tree/Tree\";\nimport styled from \"styled-components\";\nimport { useParse } from \"./parse\";\nimport LanguagesSelection from \"./LanguagesSelection\";\nimport TreeCollapse from \"./TreeCollapse\";\nimport ProblemsSelection, { SelectedProblem } from \"./ProblemsSelection\";\nimport Import from \"./Import\";\nimport Export from \"./Export\";\n\nexport default function App() {\n  const { data, onAdd, onChangeValue, onRemove, onImportJson } = useParse();\n\n  const [languages, setLanguages] = useState<string[]>([]);\n\n  const [collapseAll, setCollapseAll] = useState<boolean>();\n  const onCollapseChange = useCallback(() => setCollapseAll(undefined), []);\n\n  const [caseSensitive, setCaseSensitive] = useState(false);\n  const [filter, setFilter] = useState(\"\");\n  const [filteredProblems, setFilteredProblems] = useState<\n    Array<SelectedProblem>\n  >([]);\n\n  return (\n    <AppContainer>\n      <TopBar>\n        <LanguagesSelection onSelectionChange={setLanguages} />\n        <TreeCollapse\n          collapseAll={collapseAll}\n          onCollapseAll={setCollapseAll}\n        />\n        {onImportJson && <Import onImport={onImportJson} />}\n        {data && <Export data={data} />}\n        <Filter>\n          <span>\n            <NonSelectable>Filter:</NonSelectable>\n            <FilterInput\n              onChange={(event) => setFilter(event.target.value.trim())}\n            />\n            <input\n              type=\"checkbox\"\n              name=\"case sensitive\"\n              checked={caseSensitive}\n              onChange={(event) => setCaseSensitive(event.target.checked)}\n            />\n            <NonSelectable onClick={() => setCaseSensitive((x) => !x)}>\n              case sensitive\n            </NonSelectable>\n            <ProblemsSelection\n              filteredProblems={filteredProblems}\n              onChange={setFilteredProblems}\n            />\n          </span>\n        </Filter>\n      </TopBar>\n      <Content>\n        {!data ? (\n          \"No data\"\n        ) : (\n          <Tree\n            data={data}\n            languages={languages}\n            collapseAll={collapseAll}\n            onCollapseChange={onCollapseChange}\n            filter={{ text: filter, caseSensitive, problems: filteredProblems }}\n            onAdd={onAdd}\n            onChangeValue={onChangeValue}\n            onRemove={onRemove}\n          />\n        )}\n      </Content>\n\n      <Footer />\n    </AppContainer>\n  );\n}\n\nconst AppContainer = styled.div`\n  background-color: #ffffff;\n  display: flex;\n  flex-direction: column;\n  min-height: 100vh;\n\n  font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", \"Oxygen\",\n    \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\",\n    sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  font-weight: 400;\n`;\n\nconst TopBar = styled.div`\n  width: 100vw;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  padding-left: 1em;\n  padding-right: 1em;\n`;\n\nconst Filter = styled.div`\n  flex: 3;\n  display: flex;\n  justify-content: space-around;\n`;\n\nconst FilterInput = styled.input`\n  font-family: monospace, monospace;\n  font-size: 16px;\n  padding: 0 8px;\n  margin-left: 1em;\n  min-width: min(50vw, 400px);\n`;\n\nconst Content = styled.div`\n  flex: 1;\n  min-width: 800px;\n  max-width: 95vw;\n  margin: 0 40px;\n  padding-top: 15px;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst NonSelectable = styled.span`\n  -webkit-touch-callout: none;\n  -webkit-user-select: none;\n  -khtml-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  user-select: none;\n`;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}