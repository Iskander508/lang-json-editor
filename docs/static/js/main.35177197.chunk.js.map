{"version":3,"sources":["Footer.tsx","protocol.ts","tree/problem.ts","tree/filter.ts","tree/Context.ts","tree/images/add.svg","tree/images/edit.svg","tree/images/confirm.svg","tree/images/cancel.svg","tree/images/trash.svg","tree/images/copy.svg","tree/images/section.svg","tree/images/value.svg","tree/images/google-translate.svg","tree/images/vscode.svg","tree/images/deepl.svg","tree/components/Button.tsx","tree/components/Controls.tsx","tree/components/ControlsContainer.tsx","tree/util.ts","tree/components/TranslateButton.tsx","tree/ValueNode.tsx","tree/ObjectNode.tsx","tree/Tree.tsx","action.ts","parse.ts","LanguagesSelection.tsx","TreeCollapse.tsx","ProblemsSelection.tsx","Import.tsx","Export.tsx","App.tsx","index.tsx"],"names":["Footer","year","useMemo","Date","getFullYear","Container","NodeType","styled","div","Problem","NO_PROBLEM","extractPlaceholders","value","matches","match","Array","from","Set","map","p","substring","length","sort","findProblemsTraverse","node","languages","report","type","VALUE","some","l","undefined","values","id","MISSING","trim","EMPTY","Object","v","index","sorted","SAME","DEFAULT","placeholders","all","isEqual","PLACEHOLDER_MISMATCH","OBJECT","children","forEach","n","findProblems","problems","problem","push","findFilteredIDsTraverse","filter","caseSensitive","isMatch","includes","toLowerCase","findFilteredIDs","ids","findIDsTraverse","findIDs","TreeContext","React","createContext","Button","onClick","loading","props","handleClick","useCallback","args","StyledButton","span","Controls","operation","buttons","visible","copyString","visibilityStyle","opacity","style","Operation","src","image","width","alt","name","button","event","callback","stopPropagation","title","text","copy","MainControls","onAdd","onRemove","onEdit","add","trash","edit","ConfirmControls","onConfirm","onCancel","editMode","confirm","cancel","AddControls","onObject","onValue","section","ConfirmationModes","useEscapeKey","onEscape","useEffect","handleEsc","keyCode","window","addEventListener","removeEventListener","getUrlParams","url","URL","location","href","deepLKey","searchParams","get","sessionId","getAll","setUrlParam","set","delete","append","history","pushState","ControlsContainer","editing","onConfirmEdit","onCancelEdit","onBeginEdit","useState","mode","setMode","withResetMode","fn","remove","GoogleTranslateButton","fromLanguage","toLanguage","encodeURIComponent","target","rel","googleTranslate","DeepLTranslateButton","onResult","setLoading","deepLTranslate","source_lang","toUpperCase","target_lang","auth_key","free_api","endsWith","then","result","data","translations","catch","error","console","finally","deepl","Value","language","onChange","issues","hintForTranslation","autoFocus","setAutoFocus","focused","setFocused","inputStyle","setInputStyle","cancelEdit","change","ValueContainer","LanguageTag","ValueEditor","onFocus","ref","elem","select","ValueButtons","ValueWrapper","hint","join","onDoubleClick","offsetWidth","height","offsetHeight","left","offsetLeft","maxWidth","document","body","ValueNode","showControls","setShowControls","setEditing","setValues","useContext","onChangeValue","problematicTranslations","disabled","onMouseEnter","onMouseLeave","Label","ValuesContainer","sameAsLanguage","keys","find","differentInLanguage","hintLanguage","newValue","textarea","ObjectNode","expanded","setExpanded","addingType","setAddingType","addingLabel","setAddingLabel","filteredIds","collapseAll","onCollapseChange","stopAdding","startsWith","mainProblem","addingValid","test","onConfirmAdd","onToggleCollapse","c","NodeContainer","Caret","Collapsed","NewItemInput","placeholder","onKeyPress","e","key","SubTree","input","Tree","textFilter","problemsFilter","setProblematicTranslations","textFilteredIds","setTextFilteredIds","IDs","problemIdMap","reduce","aggr","Provider","label","parentId","cloneDeep","item","split","first","parts","child","changeValue","traversed","importJson","current","Error","newNode","exportJson","initializeParse","initialSessionId","useParse","setSession","useParseQuery","query","Parse","Query","equalTo","enableLocalDatastore","enableLiveQuery","results","save","s","object","attributes","applyModification","newData","onImportJson","json","SUPPORTED_LANGUAGES","ar","bn","bg","ca","hr","cs","da","nl","en","et","fil","fi","fr","de","el","iw","hi","hu","is","it","ja","ko","lv","lt","ms","no","pl","pt","ro","ru","sr","zh","sk","sl","es","sw","sv","th","tr","uk","vi","a","freeApi","fetch","response","LanguagesSelection","onSelectionChange","showLanguageSelection","setShowLanguageSelection","setLanguages","updateLanguage","lang","enabled","updated","x","supportedLanguages","setSupportedLanguages","getDeepLLanguages","SelectionWrapper","Selection","b","sortAlphabetically","code","CheckBox","checked","TreeCollapse","Collapse","onCollapseAll","ALL_PROBLEMS","ProblemsSelection","filteredProblems","showProblemsSelection","setShowProblemsSelection","checkJson","JSON","parse","Import","onImport","jsonInput","useRef","showContainer","setShowContainer","setLanguage","valid","setValid","setError","handleOpen","handleSubmit","toString","handleFileDrop","files","Wrapper","NonSelectable","maxFiles","onDrop","getRootProps","isDragActive","isDragReject","FileDropWrapper","JSONInput","SubmitButton","Export","handleDownload","element","createElement","file","Blob","stringify","createObjectURL","download","appendChild","click","removeChild","handleCopyToClipboard","navigator","clipboard","writeText","textArea","top","position","focus","execCommand","err","copyToClipboard","App","setCollapseAll","setCaseSensitive","setFilter","setFilteredProblems","AppContainer","TopBar","Filter","FilterInput","Content","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.35177197.chunk.js","sourcesContent":["import React, { useMemo } from \"react\";\nimport styled from \"styled-components\";\n\nexport default function Footer() {\n  const year = useMemo(() => new Date().getFullYear(), []);\n  return <Container>{`© Pavel Zarecky, ${year}`}</Container>;\n}\n\nconst Container = styled.div`\n  padding-right: 15px;\n  text-align: end;\n`;\n","export interface TNodeValues {\n  [language: string]: string;\n}\n\nexport enum NodeType {\n  OBJECT = \"OBJECT\",\n  VALUE = \"VALUE\",\n}\n\nexport type TObjectNode = {\n  id: string;\n  name: string;\n  type: NodeType.OBJECT;\n  children: TNode[];\n};\n\nexport type TValueNode = {\n  id: string;\n  name: string;\n  type: NodeType.VALUE;\n  values: TNodeValues;\n};\n\nexport type TNode = TObjectNode | TValueNode;\n\ntype JsonDataValue = string | JsonData;\nexport interface JsonData extends Record<string, JsonDataValue> {}\n","import { NodeType, TNode } from \"../protocol\";\nimport { isEqual } from \"lodash\";\n\nexport const NO_PROBLEM = \"NO_PROBLEM\";\nexport enum Problem {\n  MISSING = \"MISSING\", // completely missing\n  EMPTY = \"EMPTY\", // only whitespaces, or empty section\n  DEFAULT = \"DEFAULT\", // default label used\n  SAME = \"SAME\", // same entry for multiple languages\n  PLACEHOLDER_MISMATCH = \"PLACEHOLDER_MISMATCH\", // placeholders don't match between languages\n}\n\nexport function extractPlaceholders(value?: string) {\n  const matches = value?.match(/{{\\w+}}/g);\n  if (!matches) return [];\n\n  return Array.from(\n    new Set(matches.map((p) => p.substring(2, p.length - 2)))\n  ).sort();\n}\n\nfunction findProblemsTraverse(\n  node: TNode,\n  languages: string[],\n  report: (id: string, problem: Problem) => void\n) {\n  switch (node.type) {\n    case NodeType.VALUE:\n      if (\n        languages.some(\n          (l) => node.values[l] === undefined || node.values[l] === null\n        )\n      ) {\n        report(node.id, Problem.MISSING);\n      } else if (languages.some((l) => !node.values[l].trim())) {\n        report(node.id, Problem.EMPTY);\n      }\n\n      if (\n        Object.values(node.values)\n          .sort()\n          .some((v, index, sorted) => index && v === sorted[index - 1])\n      ) {\n        report(node.id, Problem.SAME);\n      }\n\n      if (languages.some((l) => node.values[l] === node.id)) {\n        report(node.id, Problem.DEFAULT);\n      }\n\n      if (\n        Object.values(node.values)\n          .map(extractPlaceholders)\n          .some(\n            (placeholders, index, all) =>\n              index && !isEqual(placeholders, all[index - 1])\n          )\n      ) {\n        report(node.id, Problem.PLACEHOLDER_MISMATCH);\n      }\n\n      break;\n    case NodeType.OBJECT:\n      if (!node.children.length) {\n        return report(node.id, Problem.EMPTY);\n      }\n      node.children.forEach((n) => findProblemsTraverse(n, languages, report));\n      break;\n  }\n}\n\nexport type TFindProblemsResult = Array<{ id: string; problem: Problem }>;\nexport function findProblems(node: TNode, languages: string[]) {\n  const problems: TFindProblemsResult = [];\n  findProblemsTraverse(node, languages, (id: string, problem: Problem) => {\n    problems.push({ id, problem });\n  });\n  return problems;\n}\n","import { NodeType, TNode } from \"../protocol\";\n\nfunction findFilteredIDsTraverse(\n  node: TNode,\n  filter: string,\n  caseSensitive: boolean,\n  report: (id: string) => void\n) {\n  function isMatch(id?: string) {\n    return caseSensitive\n      ? id?.includes(filter)\n      : id?.toLowerCase().includes(filter.toLowerCase());\n  }\n\n  switch (node.type) {\n    case NodeType.VALUE:\n      if (isMatch(node.id) || Object.values(node.values).some(isMatch)) {\n        report(node.id);\n      }\n      break;\n    case NodeType.OBJECT:\n      if (!node.children.length && isMatch(node.id)) {\n        report(node.id);\n      }\n      node.children.forEach((n) =>\n        findFilteredIDsTraverse(n, filter, caseSensitive, report)\n      );\n      break;\n  }\n}\n\nexport function findFilteredIDs(\n  node: TNode,\n  filter: string,\n  caseSensitive: boolean\n) {\n  const ids: string[] = [];\n  findFilteredIDsTraverse(node, filter, caseSensitive, (id) => {\n    ids.push(id);\n  });\n  return ids;\n}\n\nfunction findIDsTraverse(node: TNode, report: (id: string) => void) {\n  switch (node.type) {\n    case NodeType.VALUE:\n      report(node.id);\n      break;\n    case NodeType.OBJECT:\n      if (!node.children.length) {\n        report(node.id);\n      }\n      node.children.forEach((n) => findIDsTraverse(n, report));\n      break;\n  }\n}\n\nexport function findIDs(node: TNode) {\n  const ids: string[] = [];\n  findIDsTraverse(node, (id) => {\n    ids.push(id);\n  });\n  return ids;\n}\n","import React from \"react\";\nimport { NodeType } from \"../protocol\";\nimport { TFindProblemsResult } from \"./problem\";\n\ntype Props = {\n  collapseAll?: boolean;\n  onCollapseChange?: () => void;\n  disabled?: boolean;\n  filteredIds?: string[];\n  problematicTranslations?: TFindProblemsResult;\n  languages?: string[];\n  onAdd?: (id: string, type: NodeType, label: string) => void;\n  onChangeValue?: (id: string, language: string, value: string) => void;\n  onRemove?: (id: string) => void;\n};\n\nexport const TreeContext = React.createContext<Props>({});\n","export default __webpack_public_path__ + \"static/media/add.d8693632.svg\";","export default __webpack_public_path__ + \"static/media/edit.962e7af9.svg\";","export default __webpack_public_path__ + \"static/media/confirm.0addefb3.svg\";","export default __webpack_public_path__ + \"static/media/cancel.caea72e4.svg\";","export default __webpack_public_path__ + \"static/media/trash.85c719f0.svg\";","export default __webpack_public_path__ + \"static/media/copy.2327b577.svg\";","export default __webpack_public_path__ + \"static/media/section.774f12f9.svg\";","export default __webpack_public_path__ + \"static/media/value.cddb19bc.svg\";","export default __webpack_public_path__ + \"static/media/google-translate.0346cfbe.svg\";","export default __webpack_public_path__ + \"static/media/vscode.ea98ae01.svg\";","export default __webpack_public_path__ + \"static/media/deepl.36a3b23e.svg\";","import styled from \"styled-components\";\nimport React, { useCallback } from \"react\";\n\ntype TButtonProps = React.HTMLAttributes<HTMLSpanElement> & {\n  loading?: boolean;\n};\n\nexport function Button({ onClick, loading, ...props }: TButtonProps) {\n  const handleClick = useCallback(\n    (...args: Parameters<React.MouseEventHandler<HTMLSpanElement>>) => {\n      if (loading) return;\n      onClick?.(...args);\n    },\n    [loading, onClick]\n  );\n\n  return <StyledButton onClick={handleClick} loading={loading} {...props} />;\n}\n\nexport const StyledButton = styled.span`\n  cursor: pointer;\n  vertical-align: middle;\n  padding: 0;\n  border: none;\n  background: none;\n  opacity: 0.5;\n  min-width: 1em;\n  margin: 0 3px;\n\n  &:hover {\n    opacity: ${({ loading }: { loading?: boolean }) => (loading ? \"0.5\" : \"1\")};\n    font-weight: bold;\n  }\n\n  &:hover > * {\n    transform: scale(1.5, 1.5);\n  }\n`;\n","import {\n  add,\n  edit,\n  confirm,\n  cancel,\n  trash,\n  copy,\n  section,\n  value,\n} from \"../images\";\nimport styled from \"styled-components\";\nimport { Button } from \"./Button\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\n\ntype TOperation = {\n  name: string;\n  image: string;\n};\n\ntype TButton = {\n  name: string;\n  image: string;\n  callback: () => void;\n};\n\ntype TControlsProps = {\n  operation?: TOperation;\n  visible?: boolean;\n  copyString?: string;\n  buttons: Array<TButton | null | undefined>;\n};\n\nfunction Controls({\n  operation,\n  buttons,\n  visible = true,\n  copyString,\n}: TControlsProps) {\n  const visibilityStyle = {\n    opacity: visible ? 1 : 0,\n  };\n  return (\n    <Container style={visibilityStyle}>\n      {operation ? (\n        <Operation>\n          <img src={operation.image} width=\"16\" alt={operation.name} />\n        </Operation>\n      ) : null}\n      {buttons.map((button) =>\n        button ? (\n          <Button\n            key={button.name}\n            onClick={(event) => {\n              button.callback();\n              event.stopPropagation();\n            }}\n            title={button.name}\n          >\n            <img src={button.image} width=\"12\" alt={button.name} />\n          </Button>\n        ) : null\n      )}\n      {copyString ? (\n        <CopyToClipboard text={copyString}>\n          <Button title={`copy \"${copyString}\"`}>\n            <img src={copy} width=\"12\" alt={`copy ${copyString}`} />\n          </Button>\n        </CopyToClipboard>\n      ) : null}\n    </Container>\n  );\n}\n\ntype TMainControlsProps = {\n  visible?: boolean;\n  onAdd?: () => void;\n  onRemove?: () => void;\n  onEdit?: () => void;\n  onSources?: () => void;\n  copyString?: string;\n};\n\nexport function MainControls({\n  visible,\n  onAdd,\n  onRemove,\n  onEdit,\n  copyString,\n}: TMainControlsProps) {\n  return (\n    <Controls\n      visible={visible}\n      buttons={[\n        onAdd && { name: \"add\", image: add, callback: onAdd },\n        onRemove && { name: \"remove\", image: trash, callback: onRemove },\n        onEdit && { name: \"edit\", image: edit, callback: onEdit },\n      ]}\n      copyString={copyString}\n    />\n  );\n}\n\ntype TConfirmControlsProps = {\n  editMode?: boolean;\n  onConfirm: () => void;\n  onCancel: () => void;\n};\n\nexport function ConfirmControls({\n  onConfirm,\n  onCancel,\n  editMode,\n}: TConfirmControlsProps) {\n  const name = editMode ? \"edit\" : \"remove\";\n  return (\n    <Controls\n      operation={{\n        name,\n        image: editMode ? edit : trash,\n      }}\n      buttons={[\n        { name: `confirm ${name}`, image: confirm, callback: onConfirm },\n        { name: `cancel ${name}`, image: cancel, callback: onCancel },\n      ]}\n    />\n  );\n}\n\ntype TAddControlsProps = {\n  onObject: () => void;\n  onValue: () => void;\n  onCancel: () => void;\n};\n\nexport function AddControls({\n  onObject,\n  onValue,\n  onCancel,\n}: TAddControlsProps) {\n  return (\n    <Controls\n      operation={{\n        name: \"add\",\n        image: add,\n      }}\n      buttons={[\n        { name: \"section\", image: section, callback: onObject },\n        { name: \"value\", image: value, callback: onValue },\n        { name: \"cancel\", image: cancel, callback: onCancel },\n      ]}\n    />\n  );\n}\n\nconst Container = styled.div`\n  cursor: default;\n`;\n\nconst Operation = styled.span`\n  font-size: 10px;\n  opacity: 0.8;\n`;\n","import { useEffect, useState } from \"react\";\nimport { MainControls, ConfirmControls, AddControls } from \"./Controls\";\nimport { NodeType } from \"../../protocol\";\nimport { useEscapeKey } from \"../util\";\n\nexport enum ConfirmationModes {\n  remove = \"REMOVE_MODE\",\n  edit = \"EDIT_MODE\",\n  add = \"ADD_MODE\",\n}\n\ntype TControlsContainerProps = {\n  editing?: boolean;\n  visible?: boolean;\n  onAdd?: (type: NodeType) => void;\n  onRemove?: () => void;\n  onConfirmEdit?: () => void;\n  onCancelEdit?: () => void;\n  onBeginEdit?: () => void;\n  copyString?: string;\n};\n\nexport const ControlsContainer = ({\n  editing,\n  visible,\n  onAdd,\n  onRemove,\n  onConfirmEdit,\n  onCancelEdit,\n  onBeginEdit = () => {},\n  copyString,\n}: TControlsContainerProps) => {\n  const [mode, setMode] = useState(\n    editing ? ConfirmationModes.edit : undefined\n  );\n  useEffect(() => {\n    setMode(editing ? ConfirmationModes.edit : undefined);\n  }, [editing]);\n\n  function withResetMode(fn?: () => void) {\n    return () => {\n      setMode(undefined);\n      fn?.();\n    };\n  }\n\n  useEscapeKey(\n    mode &&\n      withResetMode(mode === ConfirmationModes.edit ? onCancelEdit : undefined)\n  );\n\n  switch (mode) {\n    case ConfirmationModes.add:\n      return (\n        <AddControls\n          // @ts-ignore\n          onObject={withResetMode(() => onAdd?.(NodeType.OBJECT))}\n          // @ts-ignore\n          onValue={withResetMode(() => onAdd?.(NodeType.VALUE))}\n          onCancel={withResetMode()}\n        />\n      );\n    case ConfirmationModes.remove:\n    case ConfirmationModes.edit:\n      return (\n        <ConfirmControls\n          editMode={mode === ConfirmationModes.edit}\n          onConfirm={withResetMode(\n            mode === ConfirmationModes.edit ? onConfirmEdit : onRemove\n          )}\n          onCancel={withResetMode(\n            mode === ConfirmationModes.edit ? onCancelEdit : undefined\n          )}\n        />\n      );\n    default:\n      return (\n        <MainControls\n          visible={visible}\n          copyString={copyString}\n          onAdd={onAdd && (() => setMode(ConfirmationModes.add))}\n          onRemove={onRemove && (() => setMode(ConfirmationModes.remove))}\n          onEdit={\n            onConfirmEdit &&\n            (() => {\n              setMode(ConfirmationModes.edit);\n              onBeginEdit?.();\n            })\n          }\n        />\n      );\n  }\n};\n\nexport default ControlsContainer;\n","import { useEffect } from \"react\";\n\nexport const useEscapeKey = (onEscape?: () => void) => {\n  useEffect(() => {\n    if (!onEscape) return;\n    const handleEsc = (event: KeyboardEvent) => {\n      if (event.keyCode === 27) onEscape();\n    };\n    window.addEventListener(\"keydown\", handleEsc);\n\n    return () => {\n      window.removeEventListener(\"keydown\", handleEsc);\n    };\n  }, [onEscape]);\n};\n\nexport const getUrlParams = () => {\n  const url = new URL(window.location.href);\n  const deepLKey = url.searchParams.get(\"deepLKey\") || undefined;\n  const sessionId = url.searchParams.get(\"sessionId\") || undefined;\n  const languages = url.searchParams.getAll(\"language\");\n  return { deepLKey, sessionId, languages };\n};\n\nexport const setUrlParam = (name: string, value: string | string[]) => {\n  const url = new URL(window.location.href);\n  if (typeof value === \"string\") {\n    url.searchParams.set(name, value);\n  } else {\n    url.searchParams.delete(name);\n    value.forEach((v) => url.searchParams.append(name, v));\n  }\n  window.history.pushState({}, \"\", url.href);\n};\n","import React, { useCallback, useState } from \"react\";\nimport { googleTranslate, deepl } from \"../images\";\nimport { Button } from \"./Button\";\nimport deepLTranslate from \"deepl\";\nimport { getUrlParams } from \"../util\";\n\ntype TGoogleTranslateButtonProps = {\n  text: string;\n  fromLanguage: string;\n  toLanguage: string;\n};\n\nexport function GoogleTranslateButton({\n  text,\n  fromLanguage,\n  toLanguage,\n}: TGoogleTranslateButtonProps) {\n  const title = \"Open on GoogleTranslate\";\n  return (\n    <a\n      href={`https://translate.google.com/?sl=${encodeURIComponent(\n        fromLanguage\n      )}&tl=${encodeURIComponent(toLanguage)}&text=${encodeURIComponent(text)}`}\n      target=\"_blank\"\n      rel=\"noreferrer\"\n    >\n      <Button title={title}>\n        <img src={googleTranslate} width=\"12\" alt={title} />\n      </Button>\n    </a>\n  );\n}\n\nconst { deepLKey } = getUrlParams();\n\ntype TDeepLTranslateButtonProps = {\n  text: string;\n  fromLanguage: string;\n  toLanguage: string;\n  onResult: (text: string) => void;\n};\n\nexport function DeepLTranslateButton({\n  text,\n  fromLanguage,\n  toLanguage,\n  onResult,\n}: TDeepLTranslateButtonProps) {\n  const title = \"Translate with DeepL\";\n  const [loading, setLoading] = useState(false);\n  const onClick = useCallback(() => {\n    if (!deepLKey) return;\n    setLoading(true);\n    deepLTranslate({\n      text,\n      // @ts-ignore\n      source_lang: fromLanguage.toUpperCase(),\n      // @ts-ignore\n      target_lang: toLanguage.toUpperCase(),\n      auth_key: deepLKey,\n      free_api: deepLKey.endsWith(\":fx\"),\n    })\n      .then((result) => onResult(result.data.translations[0].text))\n      .catch((error) => console.error(error))\n      .finally(() => setLoading(false));\n  }, [text, fromLanguage, toLanguage, onResult]);\n\n  return !deepLKey ? null : (\n    <Button title={title} onClick={onClick} loading={loading}>\n      <img src={deepl} width=\"12\" alt={title} />\n    </Button>\n  );\n}\n","import { useState, useContext, useEffect, useCallback } from \"react\";\nimport ControlsContainer from \"./components/ControlsContainer\";\nimport styled from \"styled-components\";\nimport { TreeContext } from \"./Context\";\nimport { useEscapeKey } from \"./util\";\nimport {\n  GoogleTranslateButton,\n  DeepLTranslateButton,\n} from \"./components/TranslateButton\";\nimport { Problem, extractPlaceholders } from \"./problem\";\nimport { isEqual } from \"lodash\";\nimport { TValueNode } from \"../protocol\";\n\ntype TValueProps = {\n  language: string;\n  editing: boolean;\n  value: string;\n  onChange: (v: string) => void;\n  onEdit: (v: boolean) => void;\n  issues: Array<{\n    problem: Problem;\n    hint: string;\n  }>;\n  hintForTranslation?: {\n    language: string;\n    value: string;\n  };\n};\nfunction Value({\n  language,\n  editing,\n  value,\n  onChange,\n  onEdit,\n  issues,\n  hintForTranslation,\n}: TValueProps) {\n  const [autoFocus, setAutoFocus] = useState(false);\n  const [focused, setFocused] = useState(false);\n  const [inputStyle, setInputStyle] = useState<{\n    width: number;\n    height: number;\n    maxWidth: number;\n  }>();\n  useEffect(() => {\n    if (!editing) {\n      setAutoFocus(false);\n      setFocused(false);\n    }\n  }, [editing]);\n\n  const cancelEdit = useCallback(() => onEdit(false), [onEdit]);\n  const change = useCallback(\n    (event) => {\n      onChange(event.target.value);\n      setAutoFocus(false);\n    },\n    [onChange]\n  );\n  useEscapeKey(editing ? cancelEdit : undefined);\n\n  return (\n    <ValueContainer>\n      <LanguageTag>{language.toUpperCase()}</LanguageTag>\n      {editing ? (\n        <>\n          <ValueEditor\n            style={inputStyle}\n            onFocus={() => setFocused(true)}\n            autoFocus={autoFocus}\n            value={value || \"\"}\n            onChange={change}\n            ref={(elem) => {\n              if (elem && autoFocus) elem.select();\n            }}\n          />\n          {focused && hintForTranslation ? (\n            <ValueButtons>\n              <DeepLTranslateButton\n                text={hintForTranslation.value}\n                fromLanguage={hintForTranslation.language}\n                toLanguage={language}\n                onResult={onChange}\n              />\n              <GoogleTranslateButton\n                text={hintForTranslation.value}\n                fromLanguage={hintForTranslation.language}\n                toLanguage={language}\n              />\n            </ValueButtons>\n          ) : null}\n        </>\n      ) : (\n        <ValueWrapper\n          problems={issues.map(({ problem }) => problem)}\n          title={\n            issues.length\n              ? issues.map(({ hint }) => hint).join(\"\\n\")\n              : undefined\n          }\n          onDoubleClick={() => {\n            setAutoFocus(true);\n            onEdit(true);\n          }}\n          ref={(elem) => {\n            if (elem) {\n              const width = elem.offsetWidth;\n              const height = elem.offsetHeight;\n              const left = elem.offsetLeft || 0;\n              if (\n                inputStyle?.width !== width ||\n                inputStyle?.height !== height\n              ) {\n                setInputStyle({\n                  width,\n                  height,\n                  maxWidth: document.body.offsetWidth - left - 100,\n                });\n              }\n            }\n          }}\n        >\n          {value?.trim()\n            ? value\n            : value === null || value === undefined\n            ? \"<missing>\"\n            : `\"${value}\"`}\n        </ValueWrapper>\n      )}\n    </ValueContainer>\n  );\n}\n\ntype TValueNodeProps = {\n  node: TValueNode;\n};\nexport function ValueNode({ node }: TValueNodeProps) {\n  const [showControls, setShowControls] = useState(false);\n  const [editing, setEditing] = useState(false);\n  const [values, setValues] = useState(node.values);\n  const {\n    languages,\n    onChangeValue,\n    onRemove,\n    problematicTranslations,\n    disabled,\n  } = useContext(TreeContext);\n\n  const onCancelEdit = useCallback(() => {\n    setValues(node.values);\n    setEditing(false);\n  }, [node]);\n\n  useEffect(() => {\n    if (disabled) {\n      onCancelEdit();\n    }\n  }, [disabled, onCancelEdit]);\n\n  useEffect(\n    () => {\n      if (!editing) {\n        setValues(node.values);\n      }\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [node.values]\n  );\n\n  const problems =\n    problematicTranslations\n      ?.filter(({ id }) => id === node.id)\n      .map(({ problem }) => problem) || [];\n\n  return (\n    <Container\n      onMouseEnter={() => setShowControls(true)}\n      onMouseLeave={() => setShowControls(false)}\n    >\n      <Label title={node.id} problems={problems}>\n        {node.name}\n      </Label>\n      <ValuesContainer>\n        {languages?.map((language) => {\n          const value = values[language];\n          const issues = [];\n\n          if (\n            problems.includes(Problem.MISSING) &&\n            (value === undefined || value === null)\n          ) {\n            issues.push({\n              problem: Problem.MISSING,\n              hint: \"\\u26A0 issue: Missing value\",\n            });\n          } else if (problems.includes(Problem.EMPTY) && !value?.trim()) {\n            issues.push({\n              problem: Problem.EMPTY,\n              hint: \"\\u26A0 Potential issue: Empty value\",\n            });\n          }\n\n          if (problems.includes(Problem.DEFAULT) && value === node.id) {\n            issues.push({\n              problem: Problem.DEFAULT,\n              hint: `\\u26A0 Potential issue: Default value used \"${value}\"`,\n            });\n          }\n\n          if (problems.includes(Problem.SAME)) {\n            const sameAsLanguage = Object.keys(values).find(\n              (l) => l !== language && values[l] === value\n            );\n            if (sameAsLanguage)\n              issues.push({\n                problem: Problem.SAME,\n                hint: `\\u26A0 Potential issue: The same as the \"${sameAsLanguage}\" version`,\n              });\n          }\n\n          if (problems.includes(Problem.PLACEHOLDER_MISMATCH)) {\n            const differentInLanguage = Object.keys(values).find(\n              (l) =>\n                l !== language &&\n                !isEqual(\n                  extractPlaceholders(values[l]),\n                  extractPlaceholders(value)\n                )\n            );\n            if (differentInLanguage)\n              issues.push({\n                problem: Problem.PLACEHOLDER_MISMATCH,\n                hint: `\\u26A0 Potential issue: Different placeholders from the \"${differentInLanguage}\" version`,\n              });\n          }\n\n          const hintLanguage = Object.keys(values).find(\n            (l) => l !== language && values[l] && values[l] !== node.id\n          );\n\n          return (\n            <Value\n              key={language}\n              language={language}\n              editing={editing}\n              issues={issues}\n              value={value}\n              hintForTranslation={\n                hintLanguage\n                  ? {\n                      language: hintLanguage,\n                      value: values[hintLanguage],\n                    }\n                  : undefined\n              }\n              onChange={(v) => setValues({ ...values, [language]: v })}\n              onEdit={(v) => {\n                setEditing(!disabled && v);\n                if (!v) {\n                  setValues(node.values);\n                }\n              }}\n            />\n          );\n        })}\n      </ValuesContainer>\n      <ControlsContainer\n        visible={showControls}\n        editing={editing}\n        onBeginEdit={disabled ? undefined : () => setEditing(true)}\n        onConfirmEdit={\n          disabled\n            ? undefined\n            : () => {\n                languages?.forEach((language) => {\n                  const newValue = values[language];\n                  const oldValue = node.values[language];\n                  if (newValue !== oldValue) {\n                    onChangeValue?.(node.id, language, newValue);\n                  }\n                });\n                setEditing(false);\n              }\n        }\n        onCancelEdit={disabled ? undefined : onCancelEdit}\n        onRemove={\n          disabled\n            ? undefined\n            : () => {\n                onRemove?.(node.id);\n              }\n        }\n        copyString={node.id}\n      />\n    </Container>\n  );\n}\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  margin-bottom: 2px;\n`;\n\nconst Label = styled.div`\n  cursor: default;\n  background-color: ${({ problems }: { problems: Problem[] }) =>\n    problems.includes(Problem.MISSING)\n      ? \"salmon\"\n      : problems.includes(Problem.EMPTY) || problems.includes(Problem.DEFAULT)\n      ? \"moccasin\"\n      : problems.length\n      ? \"lightcyan\"\n      : \"lightgreen\"};\n  font-family: monospace, monospace;\n  padding: 0 8px;\n  border: 0.5px solid black;\n  border-radius: 4px 0 0 4px;\n  display: flex;\n  align-items: center;\n  align-self: stretch;\n`;\n\nconst ValuesContainer = styled.div``;\n\nconst LanguageTag = styled.span`\n  cursor: default;\n  padding: 0 8px;\n  color: white;\n  background-color: black;\n`;\n\nconst ValueContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  font-family: monospace, monospace;\n`;\n\nconst ValueWrapper = styled.div`\n  padding: 0 8px;\n  border: 0.5px solid black;\n  ${({ problems }: { problems: Problem[] }) =>\n    problems.includes(Problem.MISSING)\n      ? \"background-color: red; color: white; font-style: italic; font-family: sans-serif, monospace;\"\n      : problems.includes(Problem.EMPTY)\n      ? \"background-color: orange;\"\n      : problems.length\n      ? \"background-color: lightcyan;\"\n      : \"\"}\n`;\n\nconst ValueEditor = styled.textarea`\n  font-size: 16px;\n  min-height: 1em;\n`;\n\nconst ValueButtons = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n","import { useState, useContext, useCallback, useEffect } from \"react\";\nimport SmoothCollapse from \"react-smooth-collapse\";\nimport ControlsContainer from \"./components/ControlsContainer\";\nimport styled from \"styled-components\";\nimport { TreeContext } from \"./Context\";\nimport { NodeType, TObjectNode } from \"../protocol\";\nimport { ValueNode } from \"./ValueNode\";\nimport { confirm, cancel } from \"./images\";\nimport { Button } from \"./components/Button\";\nimport { useEscapeKey } from \"./util\";\nimport { Problem } from \"./problem\";\n\ntype TObjectNodeProps = {\n  node: TObjectNode;\n};\nexport function ObjectNode({ node }: TObjectNodeProps) {\n  const [expanded, setExpanded] = useState(!node.id);\n  const [showControls, setShowControls] = useState(false);\n  const [addingType, setAddingType] = useState<NodeType>();\n  const [addingLabel, setAddingLabel] = useState(\"\");\n\n  const {\n    onAdd,\n    onRemove,\n    problematicTranslations,\n    filteredIds,\n    disabled,\n    collapseAll,\n    onCollapseChange,\n  } = useContext(TreeContext);\n\n  const stopAdding = useCallback(() => {\n    setAddingType(undefined);\n    setAddingLabel(\"\");\n  }, []);\n\n  useEffect(() => {\n    if (!expanded || disabled) {\n      stopAdding();\n    }\n  }, [disabled, expanded, stopAdding]);\n\n  useEffect(() => {\n    if (collapseAll !== undefined) {\n      setExpanded(!collapseAll);\n    }\n  }, [collapseAll]);\n\n  useEscapeKey(addingType && stopAdding);\n\n  const problems = problematicTranslations\n    ?.filter(({ id }) => id === node.id || id.startsWith(`${node.id}.`))\n    .map(({ problem }) => problem);\n  const mainProblem = problems?.includes(Problem.MISSING)\n    ? Problem.MISSING\n    : problems?.includes(Problem.EMPTY)\n    ? Problem.EMPTY\n    : problems?.includes(Problem.DEFAULT)\n    ? Problem.DEFAULT\n    : problems?.includes(Problem.SAME)\n    ? Problem.SAME\n    : undefined;\n\n  const addingValid =\n    addingLabel &&\n    /^\\w+$/.test(addingLabel) &&\n    !node.children.some(({ name }) => name === addingLabel);\n\n  const onConfirmAdd =\n    addingValid && addingType\n      ? () => {\n          onAdd?.(node.id, addingType, addingLabel);\n          stopAdding();\n        }\n      : undefined;\n\n  const onToggleCollapse = useCallback(() => {\n    onCollapseChange?.();\n    setExpanded((c) => !c);\n  }, [onCollapseChange]);\n  const onMouseEnter = useCallback(() => setShowControls(true), []);\n  const onMouseLeave = useCallback(() => setShowControls(false), []);\n\n  return (\n    <>\n      <NodeContainer\n        onClick={onToggleCollapse}\n        onMouseEnter={onMouseEnter}\n        onMouseLeave={onMouseLeave}\n      >\n        <Label\n          id={node.id}\n          problem={mainProblem}\n          expanded={expanded}\n          title={node.id}\n        >\n          <Caret>{expanded ? \"-\" : \"+\"}</Caret>\n          {node.name}\n        </Label>\n        {expanded ? (\n          !addingType &&\n          !disabled && (\n            <ControlsContainer\n              visible={showControls}\n              onAdd={(type) => setAddingType(type)}\n              onRemove={node.id ? () => onRemove?.(node.id) : undefined}\n            />\n          )\n        ) : (\n          <Collapsed>{`{} ${node.children.length} item${\n            node.children.length === 1 ? \"\" : \"s\"\n          }`}</Collapsed>\n        )}\n      </NodeContainer>\n      {addingType ? (\n        <>\n          <NewItemInput\n            type=\"text\"\n            autoFocus\n            placeholder={\n              addingType === NodeType.OBJECT ? \"new section\" : \"new value\"\n            }\n            onChange={(event) => setAddingLabel(event.target.value.trim())}\n            onKeyPress={(e) => e.key === \"Enter\" && onConfirmAdd?.()}\n          />\n          {addingValid ? (\n            <Button onClick={onConfirmAdd}>\n              <img src={confirm} width=\"16\" alt=\"confirm\" />\n            </Button>\n          ) : null}\n          <Button onClick={stopAdding}>\n            <img src={cancel} width=\"16\" alt=\"cancel\" />\n          </Button>\n        </>\n      ) : null}\n      <SubTree>\n        <SmoothCollapse expanded={expanded}>\n          {node.children.map((n) => {\n            if (\n              filteredIds &&\n              !filteredIds.some(\n                (id) => id === n.id || id.startsWith(`${n.id}.`)\n              )\n            ) {\n              return null;\n            }\n            return n.type === NodeType.OBJECT ? (\n              <ObjectNode key={n.id} node={n} />\n            ) : (\n              <ValueNode key={n.id} node={n} />\n            );\n          })}\n        </SmoothCollapse>\n      </SubTree>\n    </>\n  );\n}\n\nconst getLabelBackground = ({\n  id,\n  problem,\n  expanded,\n}: {\n  id: string;\n  problem?: Problem;\n  expanded: boolean;\n}) => {\n  if (!id) return \"white\";\n  switch (problem) {\n    case Problem.MISSING:\n      return expanded ? \"pink\" : \"salmon\";\n    case Problem.EMPTY:\n    case Problem.DEFAULT:\n      return expanded ? \"white\" : \"moccasin\";\n    case Problem.SAME:\n      return expanded ? \"white\" : \"lightcyan\";\n    default:\n      return expanded ? \"mintcream\" : \"lightgreen\";\n  }\n};\n\nconst NodeContainer = styled.div`\n  cursor: default;\n  position: relative;\n  display: flex;\n  flex-direction: row;\n`;\n\nconst Caret = styled.span`\n  min-width: 10px;\n  margin-right: 2px;\n`;\n\nconst Label = styled.span`\n  background-color: ${getLabelBackground};\n  font-family: monospace, monospace;\n  padding: 0 8px;\n  border: 0.5px solid black;\n  border-radius: 4px;\n\n  &:hover {\n    font-weight: bold;\n  }\n`;\n\nconst Collapsed = styled.span`\n  color: grey;\n  margin: 0 8px;\n`;\n\nconst SubTree = styled.div`\n  padding-left: 20px;\n  margin-bottom: 4px;\n`;\n\nconst NewItemInput = styled.input`\n  font-family: monospace, monospace;\n  font-size: 16px;\n  padding: 0 8px;\n  margin-left: 20px;\n  margin-bottom: 4px;\n`;\n","import { useEffect, useState } from \"react\";\nimport { NodeType, TObjectNode } from \"../protocol\";\nimport {\n  findProblems,\n  NO_PROBLEM,\n  Problem,\n  TFindProblemsResult,\n} from \"./problem\";\nimport { findIDs, findFilteredIDs } from \"./filter\";\nimport { TreeContext } from \"./Context\";\nimport { ObjectNode } from \"./ObjectNode\";\n\ntype TProblemsFilter = Array<Problem | typeof NO_PROBLEM>;\ntype TFilter = {\n  text: string;\n  caseSensitive: boolean;\n  problems: TProblemsFilter;\n};\n\ntype TreeProps = {\n  data: TObjectNode;\n  languages?: string[];\n  filter: TFilter;\n  onAdd?: (id: string, type: NodeType, label: string) => void;\n  onChangeValue?: (id: string, language: string, value: string) => void;\n  onRemove?: (id: string) => void;\n  disabled?: boolean;\n  collapseAll?: boolean;\n  onCollapseChange: () => void;\n};\n\nexport default function Tree({\n  data,\n  languages,\n  filter: { text: textFilter, caseSensitive, problems: problemsFilter },\n  onAdd,\n  onChangeValue,\n  onRemove,\n  disabled,\n  collapseAll,\n  onCollapseChange,\n}: TreeProps) {\n  const [problematicTranslations, setProblematicTranslations] =\n    useState<TFindProblemsResult>([]);\n  useEffect(() => {\n    if (languages?.length) {\n      setProblematicTranslations(findProblems(data, languages));\n    }\n  }, [data, languages]);\n\n  const [textFilteredIds, setTextFilteredIds] = useState<string[]>();\n  useEffect(() => {\n    if (data && textFilter) {\n      setTextFilteredIds(findFilteredIDs(data, textFilter, caseSensitive));\n    } else {\n      setTextFilteredIds(undefined);\n    }\n  }, [caseSensitive, textFilter, data]);\n\n  let filteredIds = textFilteredIds;\n  if (data && problemsFilter?.length) {\n    const IDs = textFilteredIds || findIDs(data);\n\n    const problemIdMap = problematicTranslations.reduce<{\n      [id: string]: Problem[];\n    }>((aggr, { id, problem }) => {\n      if (aggr[id]) {\n        aggr[id].push(problem);\n      } else {\n        aggr[id] = [problem];\n      }\n      return aggr;\n    }, {});\n\n    filteredIds = IDs.filter(\n      (id) =>\n        (problemsFilter.includes(NO_PROBLEM) && !problemIdMap[id]) ||\n        problemIdMap[id]?.some((problem) => problemsFilter.includes(problem))\n    );\n  }\n\n  return (\n    <TreeContext.Provider\n      value={{\n        collapseAll,\n        onCollapseChange,\n        disabled,\n        filteredIds,\n        problematicTranslations,\n        languages: languages,\n        onAdd,\n        onChangeValue,\n        onRemove,\n      }}\n    >\n      {data ? <ObjectNode node={data} /> : null}\n    </TreeContext.Provider>\n  );\n}\n","import { cloneDeep } from \"lodash\";\nimport { JsonData, NodeType, TObjectNode } from \"./protocol\";\nimport { getUrlParams } from \"./tree/util\";\n\nexport function add(\n  node: TObjectNode,\n  id: string,\n  type: NodeType,\n  label: string,\n  parentId?: string\n): TObjectNode {\n  const result = parentId ? node : cloneDeep(node);\n  if (!id) {\n    const item = {\n      id: parentId ? `${parentId}.${label}` : label,\n      name: label,\n    };\n\n    const values: Record<string, string> = {};\n    if (type === NodeType.VALUE) {\n      const { languages } = getUrlParams();\n      languages.forEach((l) => {\n        values[l] = item.id;\n      });\n    }\n\n    result.children.push(\n      type === NodeType.OBJECT\n        ? { ...item, type, children: [] }\n        : { ...item, type, values }\n    );\n\n    return result;\n  }\n\n  const [first, ...parts] = id.split(\".\");\n  const child = result.children.find(({ name }) => name === first);\n  if (child?.type === NodeType.OBJECT) {\n    add(\n      child,\n      parts.join(\".\"),\n      type,\n      label,\n      parentId ? `${parentId}.${first}` : first\n    );\n    return result;\n  }\n\n  console.error(\"ADD: Invalid ID\", id, type, node);\n  return result;\n}\n\nexport function changeValue(\n  node: TObjectNode,\n  id: string,\n  language: string,\n  value: string,\n  traversed?: boolean\n): TObjectNode {\n  const result = traversed ? node : cloneDeep(node);\n\n  const [first, ...parts] = id.split(\".\");\n  const child = result.children.find(({ name }) => name === first);\n  if (!child) {\n    console.error(\"CHANGE-VALUE: Invalid ID\", id, node);\n    return result;\n  }\n\n  if (child.type === NodeType.OBJECT) {\n    changeValue(child, parts.join(\".\"), language, value, true);\n  } else {\n    child.values[language] = value;\n  }\n\n  return result;\n}\n\nexport function remove(\n  node: TObjectNode,\n  id: string,\n  traversed?: boolean\n): TObjectNode {\n  const result = traversed ? node : cloneDeep(node);\n\n  const [first, ...parts] = id.split(\".\");\n  const child = result.children.find(({ name }) => name === first);\n  if (!child) {\n    console.error(\"REMOVE: ID not found\", id, node);\n    return result;\n  }\n\n  if (parts.length) {\n    if (child.type !== NodeType.OBJECT) {\n      console.error(\"REMOVE: Invalid type\", id, node);\n      return result;\n    }\n\n    remove(child, parts.join(\".\"), true);\n  } else {\n    result.children = result.children.filter(({ name }) => name !== first);\n  }\n\n  return result;\n}\n\nexport function importJson(\n  node: TObjectNode,\n  data: JsonData,\n  language: string,\n  traversed?: boolean\n): TObjectNode {\n  const result = traversed ? node : cloneDeep(node);\n\n  Object.keys(data).forEach((key) => {\n    const value = data[key];\n    const type = typeof value === \"string\" ? NodeType.VALUE : NodeType.OBJECT;\n    const current = result.children.find(({ name }) => name === key);\n\n    if (type === NodeType.OBJECT && !value) return;\n    if (current && current.type !== type) {\n      throw new Error(\n        `Mismatch types: ${current.id}: current=${current.type}, imported=${type}`\n      );\n    }\n\n    if (current) {\n      if (current.type === NodeType.VALUE) {\n        current.values[language] = value as string;\n      } else {\n        importJson(current, value as JsonData, language, true);\n      }\n    } else {\n      const id = result.id ? `${result.id}.${key}` : key;\n      if (type === NodeType.VALUE) {\n        const values: Record<string, string> = {};\n        const { languages } = getUrlParams();\n        languages.forEach((l) => {\n          values[l] = id;\n        });\n        values[language] = value as string;\n        result.children.push({ id, name: key, type, values });\n      } else {\n        const newNode: TObjectNode = { id, name: key, type, children: [] };\n        importJson(newNode, value as JsonData, language, true);\n        result.children.push(newNode);\n      }\n    }\n  });\n\n  return result;\n}\n\nexport function exportJson(node: TObjectNode, language: string): JsonData {\n  const result: JsonData = {};\n\n  node.children.forEach((item) => {\n    if (item.type === NodeType.VALUE) {\n      if (language in item.values) {\n        result[item.name] = item.values[language];\n      }\n    } else {\n      result[item.name] = exportJson(item, language);\n    }\n  });\n\n  return result;\n}\n","import { JsonData, NodeType, TObjectNode } from \"./protocol\";\nimport { getUrlParams, setUrlParam } from \"./tree/util\";\nimport Parse from \"parse\";\nimport { initializeParse, useParseQuery } from \"@parse/react\";\nimport { useEffect, useMemo, useState } from \"react\";\nimport { add, changeValue, importJson, remove } from \"./action\";\n\ninitializeParse(\n  \"https://translation.b4a.io/\",\n  \"ZqSPDyNGkCzQYoQfxgGEUgpO4tp9Rc7z4DhJQNWI\",\n  \"6aZHlL6cm2kX99WmKTATP7rZUCGvPmNNpFF76EqM\"\n);\n\ninterface TTranslation {\n  data: TObjectNode;\n}\n\nconst { sessionId: initialSessionId } = getUrlParams();\n\ntype UseParseResult = {\n  data?: TObjectNode;\n  onAdd?: (id: string, type: NodeType, label: string) => void;\n  onChangeValue?: (id: string, language: string, value: string) => void;\n  onRemove?: (id: string) => void;\n  onImportJson?: (language: string, json: JsonData) => void;\n};\n\nexport function useParse(): UseParseResult {\n  const [sessionId, setSession] = useState(initialSessionId);\n  const { results: translations } = useParseQuery<Parse.Object<TTranslation>>(\n    useMemo(() => {\n      const query = new Parse.Query<Parse.Object<TTranslation>>(\"Translation\");\n      return sessionId ? query.equalTo(\"objectId\", sessionId) : query;\n    }, [sessionId]),\n    {\n      enableLocalDatastore: true,\n      enableLiveQuery: true,\n    }\n  );\n\n  useEffect(() => {\n    if (!sessionId) {\n      const newSession = new Parse.Object<TTranslation>(\"Translation\", {\n        data: {\n          id: \"\",\n          name: \"root\",\n          type: NodeType.OBJECT,\n          children: [],\n        },\n      });\n      newSession\n        .save()\n        .then((s) => {\n          setSession(s.id);\n          setUrlParam(\"sessionId\", s.id);\n        })\n        .catch((e) => console.error(e));\n    }\n  }, [sessionId]);\n\n  const object = translations?.[0];\n  const data = object?.attributes.data;\n  const applyModification = (newData: TObjectNode) => {\n    object?.set({ data: newData });\n    object?.save();\n  };\n  return {\n    data,\n    onAdd:\n      data &&\n      ((id: string, type: NodeType, label: string) =>\n        applyModification(add(data, id, type, label))),\n    onChangeValue:\n      data &&\n      ((id: string, language: string, value: string) =>\n        applyModification(changeValue(data, id, language, value))),\n    onRemove: data && ((id: string) => applyModification(remove(data, id))),\n    onImportJson:\n      data &&\n      ((language: string, json: JsonData) =>\n        applyModification(importJson(data, json, language))),\n  };\n}\n","import { useCallback, useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { getUrlParams, setUrlParam } from \"./tree/util\";\n\ntype Languages = Record<string, string>;\nconst SUPPORTED_LANGUAGES: Languages = {\n  ar: \"Arabic\",\n  bn: \"Bengali\",\n  bg: \"Bulgarian\",\n  ca: \"Catalan\",\n  hr: \"Croatian\",\n  cs: \"Czech\",\n  da: \"Danish\",\n  nl: \"Dutch\",\n  en: \"English\",\n  et: \"Estonian\",\n  fil: \"Filipino\",\n  fi: \"Finnish\",\n  fr: \"French\",\n  de: \"German\",\n  el: \"Greek\",\n  iw: \"Hebrew\",\n  hi: \"Hindi\",\n  hu: \"Hungarian\",\n  is: \"Icelandic\",\n  id: \"Indonesian\",\n  it: \"Italian\",\n  ja: \"Japanese\",\n  ko: \"Korean\",\n  lv: \"Latvian\",\n  lt: \"Lithuanian\",\n  ms: \"Malay\",\n  no: \"Norwegian\",\n  pl: \"Polish\",\n  pt: \"Portuguese\",\n  ro: \"Romanian\",\n  ru: \"Russian\",\n  sr: \"Serbian\",\n  zh: \"Chinese\",\n  sk: \"Slovak\",\n  sl: \"Slovenian\",\n  es: \"Spanish\",\n  sw: \"Swahili\",\n  sv: \"Swedish\",\n  th: \"Thai\",\n  tr: \"Turkish\",\n  uk: \"Ukrainian\",\n  vi: \"Vietnamese\",\n};\n\nasync function getDeepLLanguages(deepLKey: string) {\n  const freeApi = deepLKey?.endsWith(\":fx\");\n  const url = new URL(\n    `https://${freeApi ? \"api-free\" : \"api\"}.deepl.com/v2/languages`\n  );\n  url.searchParams.append(\"auth_key\", deepLKey);\n  return fetch(url.href)\n    .then((response) => response.json())\n    .then((data: Array<{ name: string; language: string }>) =>\n      data.reduce<Languages>(\n        (aggr, { name, language }) => ({\n          ...aggr,\n          [language.toLowerCase()]: name,\n        }),\n        {}\n      )\n    );\n}\n\nfunction sortAlphabetically(a: string, b: string) {\n  return a < b ? -1 : a > b ? 1 : 0;\n}\n\nexport default function LanguagesSelection(props: {\n  onSelectionChange: (languages: string[]) => void;\n}) {\n  const { onSelectionChange } = props;\n  const [showLanguageSelection, setShowLanguageSelection] = useState(false);\n  const [languages, setLanguages] = useState<string[]>(\n    getUrlParams().languages\n  );\n\n  const updateLanguage = useCallback(\n    (lang: string, enabled: boolean) => {\n      const updated = enabled\n        ? [...languages, lang]\n        : languages.filter((x) => x !== lang);\n      setLanguages(updated);\n      setUrlParam(\"language\", updated);\n    },\n    [languages]\n  );\n\n  useEffect(() => {\n    onSelectionChange(languages);\n  }, [languages, onSelectionChange]);\n\n  const [supportedLanguages, setSupportedLanguages] =\n    useState<Languages>(SUPPORTED_LANGUAGES);\n  useEffect(() => {\n    const { deepLKey } = getUrlParams();\n    if (deepLKey) {\n      getDeepLLanguages(deepLKey).then(setSupportedLanguages);\n    }\n  }, []);\n\n  return (\n    <SelectionWrapper>\n      <button onClick={() => setShowLanguageSelection((s) => !s)}>\n        Languages\n      </button>\n      {showLanguageSelection && (\n        <Selection>\n          {Object.keys(supportedLanguages)\n            .sort((a, b) =>\n              sortAlphabetically(supportedLanguages[a], supportedLanguages[b])\n            )\n            .map((code) => (\n              <span key={code}>\n                <CheckBox\n                  type=\"checkbox\"\n                  name={supportedLanguages[code]}\n                  checked={languages.includes(code)}\n                  onChange={(event) =>\n                    updateLanguage(code, event.target.checked)\n                  }\n                />\n                {supportedLanguages[code]}\n              </span>\n            ))}\n        </Selection>\n      )}\n    </SelectionWrapper>\n  );\n}\n\nconst SelectionWrapper = styled.div`\n  position: relative;\n`;\n\nconst Selection = styled.div`\n  position: absolute;\n  background-color: #ffffff;\n  border: 0.5px solid black;\n  padding: 10px;\n  display: flex;\n  flex-direction: column;\n  z-index: 1;\n  min-width: 120px;\n`;\n\nconst CheckBox = styled.input`\n  margin-right: 8px;\n`;\n","import styled from \"styled-components\";\n\nexport default function TreeCollapse(props: {\n  collapseAll?: boolean;\n  onCollapseAll: (collapse: boolean) => void;\n}) {\n  return (\n    <Collapse>\n      <span>\n        <button\n          disabled={props.collapseAll === false}\n          onClick={() => props.onCollapseAll(false)}\n          title=\"Expand All\"\n        >\n          +\n        </button>\n        <button\n          disabled={props.collapseAll}\n          onClick={() => props.onCollapseAll(true)}\n          title=\"Collapse All\"\n        >\n          -\n        </button>\n      </span>\n    </Collapse>\n  );\n}\n\nconst Collapse = styled.div`\n  flex: 1;\n  display: flex;\n  justify-content: space-around;\n`;\n","import { useState } from \"react\";\nimport { Problem, NO_PROBLEM } from \"./tree/problem\";\nimport styled from \"styled-components\";\n\nexport type SelectedProblem = Problem | typeof NO_PROBLEM;\nexport const ALL_PROBLEMS: Array<SelectedProblem> = [\n  NO_PROBLEM,\n  ...Object.values(Problem),\n];\n\nexport default function ProblemsSelection(props: {\n  filteredProblems: Array<SelectedProblem>;\n  onChange: (newSelection: Array<SelectedProblem>) => void;\n}) {\n  const { filteredProblems, onChange } = props;\n  const [showProblemsSelection, setShowProblemsSelection] = useState(false);\n\n  return (\n    <SelectionWrapper>\n      <button onClick={() => setShowProblemsSelection((s) => !s)}>\n        Problems\n      </button>\n      {showProblemsSelection && (\n        <Selection>\n          {ALL_PROBLEMS.map((v) => (\n            <span key={v}>\n              <input\n                type=\"checkbox\"\n                name={v}\n                checked={filteredProblems.includes(v)}\n                onChange={(event) =>\n                  onChange(\n                    event.target.checked\n                      ? [...filteredProblems, v]\n                      : filteredProblems.filter((x) => x !== v)\n                  )\n                }\n              />\n              {v}\n            </span>\n          ))}\n        </Selection>\n      )}\n    </SelectionWrapper>\n  );\n}\n\nconst SelectionWrapper = styled.div`\n  position: relative;\n`;\n\nconst Selection = styled.div`\n  position: absolute;\n  background-color: #ffffff;\n  border: 0.5px solid black;\n  padding: 10px;\n  display: flex;\n  flex-direction: column;\n  z-index: 1;\n`;\n","import { ChangeEvent, useCallback, useEffect, useRef, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { JsonData } from \"./protocol\";\nimport { getUrlParams, useEscapeKey } from \"./tree/util\";\nimport Dropzone from \"react-dropzone\";\n\nfunction checkJson(text: string): JsonData | null {\n  try {\n    return JSON.parse(text);\n  } catch (e) {\n    return null;\n  }\n}\n\nexport default function Import(props: {\n  onImport: (language: string, data: JsonData) => void;\n}) {\n  const { onImport } = props;\n  const jsonInput = useRef<HTMLTextAreaElement>(null);\n\n  const [showContainer, setShowContainer] = useState(false);\n  const [language, setLanguage] = useState<string>();\n  const [valid, setValid] = useState(false);\n  const [error, setError] = useState<string>();\n\n  const handleOpen = useCallback(() => {\n    if (showContainer) {\n      setShowContainer(false);\n      return;\n    }\n    const { languages } = getUrlParams();\n    if (!languages.length) return;\n    if (!language) {\n      setLanguage(languages[0]);\n    }\n    setShowContainer(true);\n  }, [language, showContainer]);\n\n  useEscapeKey(\n    useCallback(() => {\n      setShowContainer(false);\n    }, [])\n  );\n\n  useEffect(() => {\n    if (!showContainer) setError(undefined);\n  }, [showContainer]);\n\n  const handleSubmit = useCallback(() => {\n    if (!language) {\n      setError(\"No language\");\n      return;\n    }\n\n    setError(undefined);\n    const data = checkJson(jsonInput.current?.value as string);\n    if (!data) {\n      setError(\"Invalid JSON\");\n      return;\n    }\n\n    try {\n      onImport(language, data);\n      setError(\"Success!\");\n    } catch (e) {\n      setError(\"Import failed: \" + e.toString());\n      return;\n    }\n  }, [language, onImport]);\n\n  const handleFileDrop = useCallback((files: File[]) => {\n    files[0]\n      .text()\n      .then((text) => {\n        setError(undefined);\n        if (jsonInput.current) {\n          jsonInput.current.value = text;\n          setValid(checkJson(text) !== null);\n        }\n      })\n      .catch((e) => setError(e.toString()));\n  }, []);\n\n  const onChange = useCallback((event: ChangeEvent<HTMLTextAreaElement>) => {\n    setValid(checkJson(event.target.value) !== null);\n  }, []);\n\n  return (\n    <Wrapper>\n      <button onClick={handleOpen}>Import</button>\n      {showContainer && (\n        <Container>\n          <NonSelectable>\n            Language:{\" \"}\n            <select\n              value={language}\n              onChange={(event) => setLanguage(event.target.value)}\n            >\n              {getUrlParams().languages.map((v) => (\n                <option key={v} value={v}>\n                  {v}\n                </option>\n              ))}\n            </select>\n          </NonSelectable>\n          <Dropzone maxFiles={1} onDrop={handleFileDrop}>\n            {({ getRootProps, isDragActive, isDragReject }) => (\n              <FileDropWrapper\n                {...getRootProps()}\n                isDragActive={isDragActive}\n                isDragReject={isDragReject}\n              >\n                <NonSelectable>\n                  JSON: <JSONInput ref={jsonInput} onChange={onChange} />\n                </NonSelectable>\n              </FileDropWrapper>\n            )}\n          </Dropzone>\n\n          <SubmitButton disabled={!language || !valid} onClick={handleSubmit}>\n            Import\n          </SubmitButton>\n          <span>{error}</span>\n        </Container>\n      )}\n    </Wrapper>\n  );\n}\n\nconst Wrapper = styled.div`\n  position: relative;\n`;\n\nconst Container = styled.div`\n  position: absolute;\n  background-color: #ffffff;\n  border: 0.5px solid black;\n  padding: 10px;\n  display: flex;\n  flex-direction: column;\n  z-index: 1;\n`;\n\nconst JSONInput = styled.textarea`\n  font-family: monospace, monospace;\n  font-size: 16px;\n  padding: 0 8px;\n  min-width: min(50vw, 400px);\n  height: min(50vh, 400px);\n`;\n\nconst NonSelectable = styled.span`\n  -webkit-touch-callout: none;\n  -webkit-user-select: none;\n  -khtml-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  user-select: none;\n`;\n\nconst SubmitButton = styled.button`\n  align-self: flex-end;\n  margin-top: 1em;\n`;\n\nconst FileDropWrapper = styled.div`\n  border: ${(props: { isDragActive: boolean; isDragReject: boolean }) =>\n    props.isDragActive\n      ? \"4px dashed \" + (props.isDragReject ? \"red\" : \"green\")\n      : \"none\"};\n`;\n","import { useCallback, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { exportJson } from \"./action\";\nimport { JsonData, TObjectNode } from \"./protocol\";\nimport { getUrlParams, useEscapeKey } from \"./tree/util\";\n\nfunction download(language: string, data: JsonData) {\n  const element = document.createElement(\"a\");\n  const file = new Blob([JSON.stringify(data, undefined, 2)], {\n    type: \"application/json;charset=utf-8\",\n  });\n  element.href = URL.createObjectURL(file);\n  element.download = `${language}.json`;\n\n  document.body.appendChild(element);\n  element.click();\n  document.body.removeChild(element);\n}\n\nfunction copyToClipboard(data: JsonData) {\n  const text = JSON.stringify(data, undefined, 2);\n  if (navigator.clipboard) {\n    navigator.clipboard.writeText(text);\n    return;\n  }\n\n  const textArea = document.createElement(\"textarea\");\n  textArea.value = text;\n\n  // Avoid scrolling to bottom\n  textArea.style.top = \"0\";\n  textArea.style.left = \"0\";\n  textArea.style.position = \"fixed\";\n\n  document.body.appendChild(textArea);\n  textArea.focus();\n  textArea.select();\n\n  try {\n    document.execCommand(\"copy\");\n  } catch (err) {\n    console.error(\"Unable to copy\", err);\n  }\n\n  document.body.removeChild(textArea);\n}\n\nexport default function Export(props: { data: TObjectNode }) {\n  const { data } = props;\n\n  const [showContainer, setShowContainer] = useState(false);\n  const [language, setLanguage] = useState<string>();\n\n  const handleOpen = useCallback(() => {\n    if (showContainer) {\n      setShowContainer(false);\n      return;\n    }\n    const { languages } = getUrlParams();\n    if (!languages.length) return;\n    if (!language) {\n      setLanguage(languages[0]);\n    }\n    setShowContainer(true);\n  }, [language, showContainer]);\n\n  useEscapeKey(\n    useCallback(() => {\n      setShowContainer(false);\n    }, [])\n  );\n\n  const handleDownload = useCallback(() => {\n    if (language) download(language, exportJson(data, language));\n  }, [data, language]);\n\n  const handleCopyToClipboard = useCallback(() => {\n    if (language) copyToClipboard(exportJson(data, language));\n  }, [data, language]);\n\n  return (\n    <Wrapper>\n      <button onClick={handleOpen}>Export</button>\n      {showContainer && (\n        <Container>\n          <NonSelectable>\n            Language:{\" \"}\n            <select\n              value={language}\n              onChange={(event) => setLanguage(event.target.value)}\n            >\n              {getUrlParams().languages.map((v) => (\n                <option key={v} value={v}>\n                  {v}\n                </option>\n              ))}\n            </select>\n          </NonSelectable>\n\n          <Button disabled={!language} onClick={handleCopyToClipboard}>\n            Copy to clipboard\n          </Button>\n          <Button disabled={!language} onClick={handleDownload}>\n            Download\n          </Button>\n        </Container>\n      )}\n    </Wrapper>\n  );\n}\n\nconst Wrapper = styled.div`\n  position: relative;\n`;\n\nconst Container = styled.div`\n  position: absolute;\n  background-color: #ffffff;\n  border: 0.5px solid black;\n  padding: 10px;\n  display: flex;\n  flex-direction: column;\n  z-index: 1;\n`;\n\nconst NonSelectable = styled.span`\n  -webkit-touch-callout: none;\n  -webkit-user-select: none;\n  -khtml-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  user-select: none;\n`;\n\nconst Button = styled.button`\n  align-self: flex-end;\n  margin-top: 1em;\n`;\n","import Footer from \"./Footer\";\nimport { useCallback, useState } from \"react\";\nimport Tree from \"./tree/Tree\";\nimport styled from \"styled-components\";\nimport { useParse } from \"./parse\";\nimport LanguagesSelection from \"./LanguagesSelection\";\nimport TreeCollapse from \"./TreeCollapse\";\nimport ProblemsSelection, { SelectedProblem } from \"./ProblemsSelection\";\nimport Import from \"./Import\";\nimport Export from \"./Export\";\n\nexport default function App() {\n  const { data, onAdd, onChangeValue, onRemove, onImportJson } = useParse();\n\n  const [languages, setLanguages] = useState<string[]>([]);\n\n  const [collapseAll, setCollapseAll] = useState<boolean>();\n  const onCollapseChange = useCallback(() => setCollapseAll(undefined), []);\n\n  const [caseSensitive, setCaseSensitive] = useState(false);\n  const [filter, setFilter] = useState(\"\");\n  const [filteredProblems, setFilteredProblems] = useState<\n    Array<SelectedProblem>\n  >([]);\n\n  return (\n    <AppContainer>\n      <TopBar>\n        <LanguagesSelection onSelectionChange={setLanguages} />\n        <TreeCollapse\n          collapseAll={collapseAll}\n          onCollapseAll={setCollapseAll}\n        />\n        {onImportJson && <Import onImport={onImportJson} />}\n        {data && <Export data={data} />}\n        <Filter>\n          <span>\n            <NonSelectable>Filter:</NonSelectable>\n            <FilterInput\n              onChange={(event) => setFilter(event.target.value.trim())}\n            />\n            <input\n              type=\"checkbox\"\n              name=\"case sensitive\"\n              checked={caseSensitive}\n              onChange={(event) => setCaseSensitive(event.target.checked)}\n            />\n            <NonSelectable onClick={() => setCaseSensitive((x) => !x)}>\n              case sensitive\n            </NonSelectable>\n            <ProblemsSelection\n              filteredProblems={filteredProblems}\n              onChange={setFilteredProblems}\n            />\n          </span>\n        </Filter>\n      </TopBar>\n      <Content>\n        {!data ? (\n          \"No data\"\n        ) : (\n          <Tree\n            data={data}\n            languages={languages}\n            collapseAll={collapseAll}\n            onCollapseChange={onCollapseChange}\n            filter={{ text: filter, caseSensitive, problems: filteredProblems }}\n            onAdd={onAdd}\n            onChangeValue={onChangeValue}\n            onRemove={onRemove}\n          />\n        )}\n      </Content>\n\n      <Footer />\n    </AppContainer>\n  );\n}\n\nconst AppContainer = styled.div`\n  background-color: #ffffff;\n  display: flex;\n  flex-direction: column;\n  min-height: 100vh;\n\n  font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", \"Oxygen\",\n    \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\",\n    sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  font-weight: 400;\n`;\n\nconst TopBar = styled.div`\n  width: 100vw;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  padding-left: 1em;\n  padding-right: 1em;\n`;\n\nconst Filter = styled.div`\n  flex: 3;\n  display: flex;\n  justify-content: space-around;\n`;\n\nconst FilterInput = styled.input`\n  font-family: monospace, monospace;\n  font-size: 16px;\n  padding: 0 8px;\n  margin-left: 1em;\n  min-width: min(50vw, 400px);\n`;\n\nconst Content = styled.div`\n  flex: 1;\n  min-width: 800px;\n  max-width: 95vw;\n  margin: 0 40px;\n  padding-top: 15px;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst NonSelectable = styled.span`\n  -webkit-touch-callout: none;\n  -webkit-user-select: none;\n  -khtml-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  user-select: none;\n`;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}