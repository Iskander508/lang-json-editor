{"version":3,"sources":["protocol.js","Footer.tsx","tree/problem.ts","tree/filter.ts","tree/Context.ts","tree/images/add.svg","tree/images/edit.svg","tree/images/confirm.svg","tree/images/cancel.svg","tree/images/trash.svg","tree/images/copy.svg","tree/images/code.svg","tree/images/section.svg","tree/images/value.svg","tree/images/vscode.svg","tree/images/google-translate.svg","tree/images/deepl.svg","tree/components/Button.tsx","tree/components/Controls.tsx","tree/components/ControlsContainer.tsx","tree/util.ts","tree/components/TranslateButton.tsx","tree/components/SourceMatch.tsx","tree/ValueNode.tsx","tree/ObjectNode.tsx","tree/Tree.tsx","App.tsx","index.tsx"],"names":["ActionType","ADD","CHANGE_VALUE","REMOVE","OPEN","DATA_UPDATE","SOURCE_MATCHES_UPDATE","Action","add","parentId","type","label","action","changeValue","id","language","value","remove","open","file","line","column","dataUpdate","data","sourceMatchesUpdate","module","exports","NodeType","OBJECT","VALUE","MatchType","EXACT","PARTIAL","Footer","year","useMemo","Date","getFullYear","Container","Problem","styled","div","NO_PROBLEM","extractPlaceholders","matches","match","Array","from","Set","map","p","substring","length","sort","findProblemsTraverse","node","languages","sourceMatches","report","exactSourceMatches","filter","partialSourceMatches","startsWith","some","l","undefined","values","MISSING","trim","EMPTY","foundSourceMatch","foundPartialSourceMatch","PARTIAL_MATCH_IN_SOURCES","NO_MATCH_IN_SOURCES","Object","v","index","sorted","SAME","DEFAULT","placeholders","all","isEqual","PLACEHOLDER_MISMATCH","children","forEach","n","Error","findProblems","problems","problem","push","findFilteredIDsTraverse","caseSensitive","isMatch","includes","toLowerCase","findFilteredIDs","ids","findIDsTraverse","findIDs","TreeContext","React","createContext","Button","onClick","loading","props","handleClick","useCallback","args","StyledButton","span","Controls","operation","buttons","visible","copyString","visibilityStyle","opacity","style","Operation","src","image","width","alt","name","button","event","callback","stopPropagation","title","text","copy","MainControls","onAdd","onRemove","onEdit","onSources","trash","edit","code","ConfirmControls","onConfirm","onCancel","editMode","confirm","cancel","AddControls","onObject","onValue","section","ConfirmationModes","useEscapeKey","onEscape","useEffect","handleEsc","keyCode","window","addEventListener","removeEventListener","ControlsContainer","editing","onConfirmEdit","onCancelEdit","onBeginEdit","useState","mode","setMode","withResetMode","fn","GoogleTranslateButton","fromLanguage","toLanguage","href","encodeURIComponent","target","rel","googleTranslate","DeepLTranslateButton","onResult","setLoading","deepLKey","useContext","deepLTranslate","source_lang","toUpperCase","target_lang","auth_key","free_api","endsWith","then","result","translations","catch","error","console","finally","deepl","SourceMatch","contextStartLine","context","onOpen","idPosition","indexOf","Header","File","FileName","highlighted","content","LineContent","Line","LineNumber","vscode","pre","Value","onChange","issues","hintForTranslation","autoFocus","setAutoFocus","focused","setFocused","inputStyle","setInputStyle","cancelEdit","change","ValueContainer","LanguageTag","ValueEditor","onFocus","ref","elem","select","ValueButtons","ValueWrapper","hint","join","onDoubleClick","offsetWidth","height","offsetHeight","left","offsetLeft","maxWidth","document","body","ValueNode","showControls","setShowControls","showSources","setShowSources","setEditing","setValues","onChangeValue","problematicTranslations","disabled","problemHints","hasSourceMatches","onMouseEnter","onMouseLeave","Label","ValuesContainer","sameAsLanguage","keys","find","differentInLanguage","hintLanguage","newValue","s","Sources","expanded","textarea","ObjectNode","setExpanded","addingType","setAddingType","addingLabel","setAddingLabel","filteredIds","collapseAll","onCollapseChange","stopAdding","mainProblem","addingValid","test","onConfirmAdd","onToggleCollapse","c","NodeContainer","Caret","Collapsed","NewItemInput","placeholder","onKeyPress","e","key","SubTree","input","Tree","textFilter","problemsFilter","onSendMessage","setProblematicTranslations","textFilteredIds","setTextFilteredIds","IDs","problemIdMap","reduce","aggr","Provider","App","serverHost","url","URL","location","serverPort","searchParams","get","port","hostname","getServerHost","setCollapseAll","setCaseSensitive","setFilter","showProblemsFilter","setShowProblemsFilter","filteredProblems","setFilteredProblems","setSourceMatches","setData","handleIncomingMessage","useWebSocket","retryOnError","shouldReconnect","reconnectAttempts","onMessage","ev","JSON","parse","sendMessage","readyState","getStatusLabel","ReadyState","CONNECTING","CLOSED","message","stringify","fetch","response","json","hasSources","ALL_PROBLEMS","AppContainer","TopBar","ConnectionStatus","status","Collapse","Filter","FilterInput","checked","ProblemsFilterWrapper","ProblemsFilter","prev","x","Content","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.2e5c7cae.chunk.js","sourcesContent":["const NodeType = {\n  OBJECT: \"OBJECT\",\n  VALUE: \"VALUE\",\n};\n\nconst ActionType = {\n  ADD: \"ADD\",\n  CHANGE_VALUE: \"CHANGE_VALUE\",\n  REMOVE: \"REMOVE\",\n  OPEN: \"OPEN\",\n  DATA_UPDATE: \"DATA_UPDATE\",\n  SOURCE_MATCHES_UPDATE: \"SOURCE_MATCHES_UPDATE\",\n};\n\nconst MatchType = {\n  EXACT: \"exact\",\n  PARTIAL: \"partial\",\n};\n\nconst Action = {\n  add: (parentId, type, label) => ({\n    action: ActionType.ADD,\n    parentId,\n    type,\n    label,\n  }),\n  changeValue: (id, language, value) => ({\n    action: ActionType.CHANGE_VALUE,\n    id,\n    language,\n    value,\n  }),\n  remove: (id) => ({\n    action: ActionType.REMOVE,\n    id,\n  }),\n  open: (file, line, column) => ({\n    action: ActionType.OPEN,\n    file,\n    line,\n    column,\n  }),\n  dataUpdate: (data) => ({\n    action: ActionType.DATA_UPDATE,\n    data,\n  }),\n  sourceMatchesUpdate: (data) => ({\n    action: ActionType.SOURCE_MATCHES_UPDATE,\n    data,\n  }),\n};\n\nmodule.exports = { NodeType, ActionType, Action, MatchType };\n","import React, { useMemo } from \"react\";\nimport styled from \"styled-components\";\n\nexport default function Footer() {\n  const year = useMemo(() => new Date().getFullYear(), []);\n  return <Container>{`© Pavel Zarecky, ${year}`}</Container>;\n}\n\nconst Container = styled.div`\n  padding-right: 15px;\n  text-align: end;\n`;\n","import { TSourceMatch } from \"./components/SourceMatch\";\nimport { MatchType, NodeType } from \"../protocol\";\nimport { isEqual } from \"lodash\";\nimport { TNode } from \"./util\";\n\nexport const NO_PROBLEM = \"NO_PROBLEM\";\nexport enum Problem {\n  MISSING = \"MISSING\", // completely missing\n  EMPTY = \"EMPTY\", // only whitespaces, or empty section\n  DEFAULT = \"DEFAULT\", // default label used\n  SAME = \"SAME\", // same entry for multiple languages\n  PLACEHOLDER_MISMATCH = \"PLACEHOLDER_MISMATCH\", // placeholders don't match between languages\n  NO_MATCH_IN_SOURCES = \"NO_MATCH_IN_SOURCES\", // not found in any source file\n  PARTIAL_MATCH_IN_SOURCES = \"PARTIAL_MATCH_IN_SOURCES\", // only parent node found in source files\n}\n\nexport function extractPlaceholders(value?: string) {\n  const matches = value?.match(/{{\\w+}}/g);\n  if (!matches) return [];\n\n  return Array.from(\n    new Set(matches.map((p) => p.substring(2, p.length - 2)))\n  ).sort();\n}\n\nfunction findProblemsTraverse(\n  node: TNode,\n  languages: string[],\n  sourceMatches: TSourceMatch[] | undefined,\n  report: (id: string, problem: Problem) => void\n) {\n  switch (node.type) {\n    case NodeType.VALUE:\n      {\n        node.exactSourceMatches =\n          sourceMatches?.filter(\n            ({ id, type }) => id === node.id && type === MatchType.EXACT\n          ) || [];\n        node.partialSourceMatches =\n          sourceMatches?.filter(\n            ({ id }) =>\n              node.id.startsWith(`${id}.`) || node.id.startsWith(`${id}_plural`)\n          ) || [];\n\n        if (\n          languages.some(\n            (l) => node.values[l] === undefined || node.values[l] === null\n          )\n        ) {\n          report(node.id, Problem.MISSING);\n        } else if (languages.some((l) => !node.values[l].trim())) {\n          report(node.id, Problem.EMPTY);\n        }\n\n        const foundSourceMatch = node.exactSourceMatches.length;\n        const foundPartialSourceMatch = node.partialSourceMatches.length;\n        if (!foundSourceMatch) {\n          if (foundPartialSourceMatch) {\n            report(node.id, Problem.PARTIAL_MATCH_IN_SOURCES);\n          } else {\n            report(node.id, Problem.NO_MATCH_IN_SOURCES);\n          }\n        }\n\n        if (\n          Object.values(node.values)\n            .sort()\n            .some((v, index, sorted) => index && v === sorted[index - 1])\n        ) {\n          report(node.id, Problem.SAME);\n        }\n\n        if (languages.some((l) => node.values[l] === node.id)) {\n          report(node.id, Problem.DEFAULT);\n        }\n\n        if (\n          Object.values(node.values)\n            .map(extractPlaceholders)\n            .some(\n              (placeholders, index, all) =>\n                index && !isEqual(placeholders, all[index - 1])\n            )\n        ) {\n          report(node.id, Problem.PLACEHOLDER_MISMATCH);\n        }\n      }\n      break;\n    case NodeType.OBJECT:\n      if (!node.children.length) {\n        return report(node.id, Problem.EMPTY);\n      }\n      node.children.forEach((n) =>\n        findProblemsTraverse(n, languages, sourceMatches, report)\n      );\n      break;\n    default:\n      throw new Error(`Invalid type: ${node.type}`);\n  }\n}\n\nexport type TFindProblemsResult = Array<{ id: string; problem: Problem }>;\nexport function findProblems(\n  node: TNode,\n  languages: string[],\n  sourceMatches?: TSourceMatch[]\n) {\n  const problems: TFindProblemsResult = [];\n  findProblemsTraverse(\n    node,\n    languages,\n    sourceMatches,\n    (id: string, problem: Problem) => {\n      if (!sourceMatches && problem === Problem.NO_MATCH_IN_SOURCES) return;\n      problems.push({ id, problem });\n    }\n  );\n  return problems;\n}\n","import { TNode } from \"./util\";\nimport { NodeType } from \"../protocol\";\n\nfunction findFilteredIDsTraverse(\n  node: TNode,\n  filter: string,\n  caseSensitive: boolean,\n  report: (id: string) => void\n) {\n  function isMatch(id?: string) {\n    return caseSensitive\n      ? id?.includes(filter)\n      : id?.toLowerCase().includes(filter.toLowerCase());\n  }\n\n  switch (node.type) {\n    case NodeType.VALUE:\n      if (isMatch(node.id) || Object.values(node.values).some(isMatch)) {\n        report(node.id);\n      }\n      break;\n    case NodeType.OBJECT:\n      if (!node.children.length && isMatch(node.id)) {\n        report(node.id);\n      }\n      node.children.forEach((n) =>\n        findFilteredIDsTraverse(n, filter, caseSensitive, report)\n      );\n      break;\n    default:\n      throw new Error(`Invalid type: ${node.type}`);\n  }\n}\n\nexport function findFilteredIDs(\n  node: TNode,\n  filter: string,\n  caseSensitive: boolean\n) {\n  const ids: string[] = [];\n  findFilteredIDsTraverse(node, filter, caseSensitive, (id) => {\n    ids.push(id);\n  });\n  return ids;\n}\n\nfunction findIDsTraverse(node: TNode, report: (id: string) => void) {\n  switch (node.type) {\n    case NodeType.VALUE:\n      report(node.id);\n      break;\n    case NodeType.OBJECT:\n      if (!node.children.length) {\n        report(node.id);\n      }\n      node.children.forEach((n) => findIDsTraverse(n, report));\n      break;\n    default:\n      throw new Error(`Invalid type: ${node.type}`);\n  }\n}\n\nexport function findIDs(node: TNode) {\n  const ids: string[] = [];\n  findIDsTraverse(node, (id) => {\n    ids.push(id);\n  });\n  return ids;\n}\n","import React from \"react\";\nimport { NodeType } from \"../protocol\";\nimport { TFindProblemsResult } from \"./problem\";\n\ntype Props = {\n  collapseAll?: boolean;\n  onCollapseChange?: () => void;\n  disabled?: boolean;\n  filteredIds?: string[];\n  problematicTranslations?: TFindProblemsResult;\n  languages?: string[];\n  deepLKey?: string;\n  onAdd?: (id: string, type: keyof typeof NodeType, label: string) => void;\n  onChangeValue?: (id: string, language: string, value: string) => void;\n  onRemove?: (id: string) => void;\n  onOpen?: (file: string, line: number, column?: number) => void;\n};\n\nexport const TreeContext = React.createContext<Props>({});\n","export default __webpack_public_path__ + \"static/media/add.d8693632.svg\";","export default __webpack_public_path__ + \"static/media/edit.962e7af9.svg\";","export default __webpack_public_path__ + \"static/media/confirm.0addefb3.svg\";","export default __webpack_public_path__ + \"static/media/cancel.caea72e4.svg\";","export default __webpack_public_path__ + \"static/media/trash.85c719f0.svg\";","export default __webpack_public_path__ + \"static/media/copy.2327b577.svg\";","export default __webpack_public_path__ + \"static/media/code.33554129.svg\";","export default __webpack_public_path__ + \"static/media/section.774f12f9.svg\";","export default __webpack_public_path__ + \"static/media/value.cddb19bc.svg\";","export default __webpack_public_path__ + \"static/media/vscode.ea98ae01.svg\";","export default __webpack_public_path__ + \"static/media/google-translate.0346cfbe.svg\";","export default __webpack_public_path__ + \"static/media/deepl.36a3b23e.svg\";","import styled from \"styled-components\";\nimport React, { useCallback } from \"react\";\n\ntype TButtonProps = React.HTMLAttributes<HTMLSpanElement> & {\n  loading?: boolean;\n};\n\nexport function Button({ onClick, loading, ...props }: TButtonProps) {\n  const handleClick = useCallback(\n    (...args: Parameters<React.MouseEventHandler<HTMLSpanElement>>) => {\n      if (loading) return;\n      onClick?.(...args);\n    },\n    [loading, onClick]\n  );\n\n  return <StyledButton onClick={handleClick} loading={loading} {...props} />;\n}\n\nexport const StyledButton = styled.span`\n  cursor: pointer;\n  vertical-align: middle;\n  padding: 0;\n  border: none;\n  background: none;\n  opacity: 0.5;\n  min-width: 1em;\n  margin: 0 3px;\n\n  &:hover {\n    opacity: ${({ loading }: { loading?: boolean }) => (loading ? \"0.5\" : \"1\")};\n    font-weight: bold;\n  }\n\n  &:hover > * {\n    transform: scale(1.5, 1.5);\n  }\n`;\n","import {\n  add,\n  edit,\n  confirm,\n  cancel,\n  trash,\n  copy,\n  code,\n  section,\n  value,\n} from \"../images\";\nimport styled from \"styled-components\";\nimport { Button } from \"./Button\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\n\ntype TOperation = {\n  name: string;\n  image: string;\n};\n\ntype TButton = {\n  name: string;\n  image: string;\n  callback: () => void;\n};\n\ntype TControlsProps = {\n  operation?: TOperation;\n  visible?: boolean;\n  copyString?: string;\n  buttons: Array<TButton | null | undefined>;\n};\n\nfunction Controls({\n  operation,\n  buttons,\n  visible = true,\n  copyString,\n}: TControlsProps) {\n  const visibilityStyle = {\n    opacity: visible ? 1 : 0,\n  };\n  return (\n    <Container style={visibilityStyle}>\n      {operation ? (\n        <Operation>\n          <img src={operation.image} width=\"16\" alt={operation.name} />\n        </Operation>\n      ) : null}\n      {buttons.map((button) =>\n        button ? (\n          <Button\n            key={button.name}\n            onClick={(event) => {\n              button.callback();\n              event.stopPropagation();\n            }}\n            title={button.name}\n          >\n            <img src={button.image} width=\"12\" alt={button.name} />\n          </Button>\n        ) : null\n      )}\n      {copyString ? (\n        <CopyToClipboard text={copyString}>\n          <Button title={`copy \"${copyString}\"`}>\n            <img src={copy} width=\"12\" alt={`copy ${copyString}`} />\n          </Button>\n        </CopyToClipboard>\n      ) : null}\n    </Container>\n  );\n}\n\ntype TMainControlsProps = {\n  visible?: boolean;\n  onAdd?: () => void;\n  onRemove?: () => void;\n  onEdit?: () => void;\n  onSources?: () => void;\n  copyString?: string;\n};\n\nexport function MainControls({\n  visible,\n  onAdd,\n  onRemove,\n  onEdit,\n  onSources,\n  copyString,\n}: TMainControlsProps) {\n  return (\n    <Controls\n      visible={visible}\n      buttons={[\n        onAdd && { name: \"add\", image: add, callback: onAdd },\n        onRemove && { name: \"remove\", image: trash, callback: onRemove },\n        onEdit && { name: \"edit\", image: edit, callback: onEdit },\n        onSources && {\n          name: \"show in sources\",\n          image: code,\n          callback: onSources,\n        },\n      ]}\n      copyString={copyString}\n    />\n  );\n}\n\ntype TConfirmControlsProps = {\n  editMode?: boolean;\n  onConfirm: () => void;\n  onCancel: () => void;\n};\n\nexport function ConfirmControls({\n  onConfirm,\n  onCancel,\n  editMode,\n}: TConfirmControlsProps) {\n  const name = editMode ? \"edit\" : \"remove\";\n  return (\n    <Controls\n      operation={{\n        name,\n        image: editMode ? edit : trash,\n      }}\n      buttons={[\n        { name: `confirm ${name}`, image: confirm, callback: onConfirm },\n        { name: `cancel ${name}`, image: cancel, callback: onCancel },\n      ]}\n    />\n  );\n}\n\ntype TAddControlsProps = {\n  onObject: () => void;\n  onValue: () => void;\n  onCancel: () => void;\n};\n\nexport function AddControls({\n  onObject,\n  onValue,\n  onCancel,\n}: TAddControlsProps) {\n  return (\n    <Controls\n      operation={{\n        name: \"add\",\n        image: add,\n      }}\n      buttons={[\n        { name: \"section\", image: section, callback: onObject },\n        { name: \"value\", image: value, callback: onValue },\n        { name: \"cancel\", image: cancel, callback: onCancel },\n      ]}\n    />\n  );\n}\n\nconst Container = styled.div`\n  cursor: default;\n`;\n\nconst Operation = styled.span`\n  font-size: 10px;\n  opacity: 0.8;\n`;\n","import { useEffect, useState } from \"react\";\nimport { MainControls, ConfirmControls, AddControls } from \"./Controls\";\nimport { NodeType } from \"../../protocol\";\nimport { useEscapeKey } from \"../util\";\n\nexport enum ConfirmationModes {\n  remove = \"REMOVE_MODE\",\n  edit = \"EDIT_MODE\",\n  add = \"ADD_MODE\",\n}\n\ntype TControlsContainerProps = {\n  editing?: boolean;\n  visible?: boolean;\n  onAdd?: (type: keyof typeof NodeType) => void;\n  onRemove?: () => void;\n  onConfirmEdit?: () => void;\n  onCancelEdit?: () => void;\n  onBeginEdit?: () => void;\n  onSources?: () => void;\n  copyString?: string;\n};\n\nexport const ControlsContainer = ({\n  editing,\n  visible,\n  onAdd,\n  onRemove,\n  onConfirmEdit,\n  onCancelEdit,\n  onBeginEdit = () => {},\n  onSources,\n  copyString,\n}: TControlsContainerProps) => {\n  const [mode, setMode] = useState(\n    editing ? ConfirmationModes.edit : undefined\n  );\n  useEffect(() => {\n    setMode(editing ? ConfirmationModes.edit : undefined);\n  }, [editing]);\n\n  function withResetMode(fn?: () => void) {\n    return () => {\n      setMode(undefined);\n      fn?.();\n    };\n  }\n\n  useEscapeKey(\n    mode &&\n      withResetMode(mode === ConfirmationModes.edit ? onCancelEdit : undefined)\n  );\n\n  switch (mode) {\n    case ConfirmationModes.add:\n      return (\n        <AddControls\n          // @ts-ignore\n          onObject={withResetMode(() => onAdd?.(NodeType.OBJECT))}\n          // @ts-ignore\n          onValue={withResetMode(() => onAdd?.(NodeType.VALUE))}\n          onCancel={withResetMode()}\n        />\n      );\n    case ConfirmationModes.remove:\n    case ConfirmationModes.edit:\n      return (\n        <ConfirmControls\n          editMode={mode === ConfirmationModes.edit}\n          onConfirm={withResetMode(\n            mode === ConfirmationModes.edit ? onConfirmEdit : onRemove\n          )}\n          onCancel={withResetMode(\n            mode === ConfirmationModes.edit ? onCancelEdit : undefined\n          )}\n        />\n      );\n    default:\n      return (\n        <MainControls\n          visible={visible}\n          copyString={copyString}\n          onAdd={onAdd && (() => setMode(ConfirmationModes.add))}\n          onRemove={onRemove && (() => setMode(ConfirmationModes.remove))}\n          onEdit={\n            onConfirmEdit &&\n            (() => {\n              setMode(ConfirmationModes.edit);\n              onBeginEdit?.();\n            })\n          }\n          onSources={onSources}\n        />\n      );\n  }\n};\n\nexport default ControlsContainer;\n","import { TSourceMatch } from \"./components/SourceMatch\";\nimport { useEffect } from \"react\";\nimport { NodeType } from \"../protocol\";\n\nexport interface TNodeValues {\n  [language: string]: string;\n}\n\nexport type TNode = {\n  id: string;\n  name: string;\n  type: keyof typeof NodeType;\n  exactSourceMatches: TSourceMatch[];\n  partialSourceMatches: TSourceMatch[];\n  values: TNodeValues;\n  children: TNode[];\n};\n\nexport const useEscapeKey = (onEscape?: () => void) => {\n  useEffect(() => {\n    if (!onEscape) return;\n    const handleEsc = (event: KeyboardEvent) => {\n      if (event.keyCode === 27) onEscape();\n    };\n    window.addEventListener(\"keydown\", handleEsc);\n\n    return () => {\n      window.removeEventListener(\"keydown\", handleEsc);\n    };\n  }, [onEscape]);\n};\n\nexport const getServerHost = () => {\n  const url = new URL(window.location.href);\n  const serverPort = url.searchParams.get(\"serverPort\") || url.port;\n  return `${url.hostname}:${serverPort}`;\n};\n","import React, { useCallback, useContext, useState } from \"react\";\nimport { googleTranslate, deepl } from \"../images\";\nimport { Button } from \"./Button\";\nimport { TreeContext } from \"../Context\";\nimport deepLTranslate from \"deepl\";\n\ntype TGoogleTranslateButtonProps = {\n  text: string;\n  fromLanguage: string;\n  toLanguage: string;\n};\n\nexport function GoogleTranslateButton({\n  text,\n  fromLanguage,\n  toLanguage,\n}: TGoogleTranslateButtonProps) {\n  const title = \"Open on GoogleTranslate\";\n  return (\n    <a\n      href={`https://translate.google.com/?sl=${encodeURIComponent(\n        fromLanguage\n      )}&tl=${encodeURIComponent(toLanguage)}&text=${encodeURIComponent(text)}`}\n      target=\"_blank\"\n      rel=\"noreferrer\"\n    >\n      <Button title={title}>\n        <img src={googleTranslate} width=\"12\" alt={title} />\n      </Button>\n    </a>\n  );\n}\n\ntype TDeepLTranslateButtonProps = {\n  text: string;\n  fromLanguage: string;\n  toLanguage: string;\n  onResult: (text: string) => void;\n};\n\nexport function DeepLTranslateButton({\n  text,\n  fromLanguage,\n  toLanguage,\n  onResult,\n}: TDeepLTranslateButtonProps) {\n  const title = \"Translate with DeepL\";\n  const [loading, setLoading] = useState(false);\n  const { deepLKey } = useContext(TreeContext);\n  const onClick = useCallback(() => {\n    if (!deepLKey) return;\n    setLoading(true);\n    deepLTranslate({\n      text,\n      // @ts-ignore\n      source_lang: fromLanguage.toUpperCase(),\n      // @ts-ignore\n      target_lang: toLanguage.toUpperCase(),\n      auth_key: deepLKey,\n      free_api: deepLKey.endsWith(\":fx\"),\n    })\n      .then((result) => onResult(result.data.translations[0].text))\n      .catch((error) => console.error(error))\n      .finally(() => setLoading(false));\n  }, [deepLKey, text, fromLanguage, toLanguage, onResult]);\n\n  return !deepLKey ? null : (\n    <Button title={title} onClick={onClick} loading={loading}>\n      <img src={deepl} width=\"12\" alt={title} />\n    </Button>\n  );\n}\n","import React, { useContext } from \"react\";\nimport styled from \"styled-components\";\nimport { MatchType } from \"../../protocol\";\nimport { TreeContext } from \"../Context\";\nimport { vscode } from \"../images\";\n\nexport interface TSourceMatch {\n  id: string;\n  file: string;\n  line: number;\n  contextStartLine: number;\n  context: string[];\n  type: keyof typeof MatchType;\n}\n\nexport function SourceMatch({\n  id,\n  file,\n  line,\n  contextStartLine,\n  context,\n  type,\n}: TSourceMatch) {\n  const { onOpen } = useContext(TreeContext);\n  let idPosition: number | undefined =\n    context[line - contextStartLine]?.indexOf(id);\n  idPosition = idPosition === -1 ? undefined : idPosition;\n\n  return (\n    <Container type={type}>\n      <Header>\n        <File\n          title=\"Open in VSCode\"\n          onClick={() =>\n            onOpen?.(file, line, idPosition ? idPosition + 1 : undefined)\n          }\n        >\n          <FileName>{file}</FileName>:{line}\n        </File>\n      </Header>\n      {context.map((l, index) => {\n        const highlighted = line === index + contextStartLine;\n        let content = <LineContent>{l}</LineContent>;\n        if (highlighted && idPosition !== undefined) {\n          content = (\n            <>\n              <LineContent>{l.substring(0, idPosition)}</LineContent>\n              <LineContent highlighted>{id}</LineContent>\n              <LineContent>{l.substring(idPosition + id.length)}</LineContent>\n            </>\n          );\n        }\n        return (\n          <Line key={index} highlighted={highlighted} type={type}>\n            <LineNumber highlighted={highlighted}>\n              {index + contextStartLine}\n            </LineNumber>\n            {content}\n          </Line>\n        );\n      })}\n    </Container>\n  );\n}\n\nconst Container = styled.div`\n  border: 0.5px solid black;\n  border-color: ${({ type }: { type: keyof typeof MatchType }) =>\n    type === MatchType.EXACT ? \"black\" : \"darkseagreen\"};\n  font-family: monospace, monospace;\n`;\nconst Header = styled.div`\n  background-color: lightgrey;\n  padding: 0 8px;\n`;\nconst File = styled.span`\n  &:hover {\n    text-decoration: underline;\n    cursor: pointer;\n    :after {\n      padding-left: 4px;\n      content: url(${vscode});\n    }\n  }\n`;\nconst FileName = styled.span`\n  font-weight: bold;\n`;\nconst Line = styled.div`\n  background-color: ${({\n    highlighted,\n    type,\n  }: {\n    highlighted?: boolean;\n    type: keyof typeof MatchType;\n  }) =>\n    highlighted\n      ? type === MatchType.EXACT\n        ? \"lightgreen\"\n        : \"darkseagreen\"\n      : \"transparent\"};\n  margin: 0 8px;\n`;\nconst LineNumber = styled.span`\n  color: ${({ highlighted }: { highlighted?: boolean }) =>\n    highlighted ? \"black\" : \"lightgrey\"};\n  margin: 0 8px;\n  user-select: none;\n`;\nconst LineContent = styled.pre`\n  display: inline;\n  margin: 0;\n  font-weight: ${({ highlighted }: { highlighted?: boolean }) =>\n    highlighted ? \"bold\" : \"normal\"};\n`;\n","import { useState, useContext, useEffect, useCallback } from \"react\";\nimport SmoothCollapse from \"react-smooth-collapse\";\nimport ControlsContainer from \"./components/ControlsContainer\";\nimport styled from \"styled-components\";\nimport { TreeContext } from \"./Context\";\nimport { TNode, useEscapeKey } from \"./util\";\nimport {\n  GoogleTranslateButton,\n  DeepLTranslateButton,\n} from \"./components/TranslateButton\";\nimport { Problem, extractPlaceholders } from \"./problem\";\nimport { isEqual } from \"lodash\";\nimport { SourceMatch } from \"./components/SourceMatch\";\n\ntype TValueProps = {\n  language: string;\n  editing: boolean;\n  value: string;\n  onChange: (v: string) => void;\n  onEdit: (v: boolean) => void;\n  issues: Array<{\n    problem: Problem;\n    hint: string;\n  }>;\n  hintForTranslation?: {\n    language: string;\n    value: string;\n  };\n};\nfunction Value({\n  language,\n  editing,\n  value,\n  onChange,\n  onEdit,\n  issues,\n  hintForTranslation,\n}: TValueProps) {\n  const [autoFocus, setAutoFocus] = useState(false);\n  const [focused, setFocused] = useState(false);\n  const [inputStyle, setInputStyle] =\n    useState<{\n      width: number;\n      height: number;\n      maxWidth: number;\n    }>();\n  useEffect(() => {\n    if (!editing) {\n      setAutoFocus(false);\n      setFocused(false);\n    }\n  }, [editing]);\n\n  const cancelEdit = useCallback(() => onEdit(false), [onEdit]);\n  const change = useCallback(\n    (event) => {\n      onChange(event.target.value);\n      setAutoFocus(false);\n    },\n    [onChange]\n  );\n  useEscapeKey(editing ? cancelEdit : undefined);\n\n  return (\n    <ValueContainer>\n      <LanguageTag>{language}</LanguageTag>\n      {editing ? (\n        <>\n          <ValueEditor\n            style={inputStyle}\n            onFocus={() => setFocused(true)}\n            autoFocus={autoFocus}\n            value={value || \"\"}\n            onChange={change}\n            ref={(elem) => {\n              if (elem && autoFocus) elem.select();\n            }}\n          />\n          {focused && hintForTranslation ? (\n            <ValueButtons>\n              <DeepLTranslateButton\n                text={hintForTranslation.value}\n                fromLanguage={hintForTranslation.language}\n                toLanguage={language}\n                onResult={onChange}\n              />\n              <GoogleTranslateButton\n                text={hintForTranslation.value}\n                fromLanguage={hintForTranslation.language}\n                toLanguage={language}\n              />\n            </ValueButtons>\n          ) : null}\n        </>\n      ) : (\n        <ValueWrapper\n          problems={issues.map(({ problem }) => problem)}\n          title={\n            issues.length\n              ? issues.map(({ hint }) => hint).join(\"\\n\")\n              : undefined\n          }\n          onDoubleClick={() => {\n            setAutoFocus(true);\n            onEdit(true);\n          }}\n          ref={(elem) => {\n            if (elem) {\n              const width = elem.offsetWidth;\n              const height = elem.offsetHeight;\n              const left = elem.offsetLeft || 0;\n              if (\n                inputStyle?.width !== width ||\n                inputStyle?.height !== height\n              ) {\n                setInputStyle({\n                  width,\n                  height,\n                  maxWidth: document.body.offsetWidth - left - 100,\n                });\n              }\n            }\n          }}\n        >\n          {value?.trim()\n            ? value\n            : value === null || value === undefined\n            ? \"<missing>\"\n            : `\"${value}\"`}\n        </ValueWrapper>\n      )}\n    </ValueContainer>\n  );\n}\n\ntype TValueNodeProps = {\n  node: TNode;\n};\nexport function ValueNode({ node }: TValueNodeProps) {\n  const [showControls, setShowControls] = useState(false);\n  const [showSources, setShowSources] = useState(false);\n  const [editing, setEditing] = useState(false);\n  const [values, setValues] = useState(node.values);\n  const {\n    languages,\n    onChangeValue,\n    onRemove,\n    problematicTranslations,\n    disabled,\n  } = useContext(TreeContext);\n\n  useEscapeKey(showSources ? () => setShowSources(false) : undefined);\n\n  const onCancelEdit = useCallback(() => {\n    setValues(node.values);\n    setEditing(false);\n  }, [node]);\n\n  useEffect(() => {\n    if (disabled) {\n      onCancelEdit();\n    }\n  }, [disabled, onCancelEdit]);\n\n  const problems =\n    problematicTranslations\n      ?.filter(({ id }) => id === node.id)\n      .map(({ problem }) => problem) || [];\n\n  const problemHints = [];\n  if (problems.includes(Problem.NO_MATCH_IN_SOURCES))\n    problemHints.push(\"\\u26A0 No match found in the sources\");\n  if (problems.includes(Problem.PARTIAL_MATCH_IN_SOURCES))\n    problemHints.push(\"\\u26A0 Partial match in sourcefiles\");\n\n  const hasSourceMatches =\n    node.exactSourceMatches?.length || node.partialSourceMatches?.length;\n  return (\n    <>\n      <Container\n        onMouseEnter={() => setShowControls(true)}\n        onMouseLeave={() => setShowControls(false)}\n      >\n        <Label\n          title={\n            problemHints.length\n              ? `${node.id}\\n${problemHints.join(\"\\n\")}`\n              : node.id\n          }\n          problems={problems}\n        >\n          {node.name}\n        </Label>\n        <ValuesContainer>\n          {languages?.map((language) => {\n            const value = values[language];\n            const issues = [];\n\n            if (\n              problems.includes(Problem.MISSING) &&\n              (value === undefined || value === null)\n            ) {\n              issues.push({\n                problem: Problem.MISSING,\n                hint: \"\\u26A0 issue: Missing value\",\n              });\n            } else if (problems.includes(Problem.EMPTY) && !value?.trim()) {\n              issues.push({\n                problem: Problem.EMPTY,\n                hint: \"\\u26A0 Potential issue: Empty value\",\n              });\n            }\n\n            if (problems.includes(Problem.DEFAULT) && value === node.id) {\n              issues.push({\n                problem: Problem.DEFAULT,\n                hint: `\\u26A0 Potential issue: Default value used \"${value}\"`,\n              });\n            }\n\n            if (problems.includes(Problem.SAME)) {\n              const sameAsLanguage = Object.keys(values).find(\n                (l) => l !== language && values[l] === value\n              );\n              if (sameAsLanguage)\n                issues.push({\n                  problem: Problem.SAME,\n                  hint: `\\u26A0 Potential issue: The same as the \"${sameAsLanguage}\" version`,\n                });\n            }\n\n            if (problems.includes(Problem.PLACEHOLDER_MISMATCH)) {\n              const differentInLanguage = Object.keys(values).find(\n                (l) =>\n                  l !== language &&\n                  !isEqual(\n                    extractPlaceholders(values[l]),\n                    extractPlaceholders(value)\n                  )\n              );\n              if (differentInLanguage)\n                issues.push({\n                  problem: Problem.PLACEHOLDER_MISMATCH,\n                  hint: `\\u26A0 Potential issue: Different placeholders from the \"${differentInLanguage}\" version`,\n                });\n            }\n\n            const hintLanguage = Object.keys(values).find(\n              (l) => l !== language && values[l] && values[l] !== node.id\n            );\n\n            return (\n              <Value\n                key={language}\n                language={language}\n                editing={editing}\n                issues={issues}\n                value={value}\n                hintForTranslation={\n                  hintLanguage\n                    ? {\n                        language: hintLanguage,\n                        value: values[hintLanguage],\n                      }\n                    : undefined\n                }\n                onChange={(v) => setValues({ ...values, [language]: v })}\n                onEdit={(v) => {\n                  setEditing(!disabled && v);\n                  if (!v) {\n                    setValues(node.values);\n                  }\n                }}\n              />\n            );\n          })}\n        </ValuesContainer>\n        <ControlsContainer\n          visible={showControls || showSources}\n          editing={editing}\n          onBeginEdit={disabled ? undefined : () => setEditing(true)}\n          onConfirmEdit={\n            disabled\n              ? undefined\n              : () => {\n                  languages?.forEach((language) => {\n                    const newValue = values[language];\n                    const oldValue = node.values[language];\n                    if (newValue !== oldValue) {\n                      onChangeValue?.(node.id, language, newValue);\n                    }\n                  });\n                  setEditing(false);\n                }\n          }\n          onCancelEdit={disabled ? undefined : onCancelEdit}\n          onRemove={\n            disabled\n              ? undefined\n              : () => {\n                  onRemove?.(node.id);\n                }\n          }\n          onSources={\n            hasSourceMatches ? () => setShowSources((s) => !s) : undefined\n          }\n          copyString={node.id}\n        />\n      </Container>\n      <Sources>\n        <SmoothCollapse expanded={showSources}>\n          {node.exactSourceMatches?.map((match, index) => (\n            <SourceMatch key={`exact-${index}`} {...match} />\n          ))}\n          {node.partialSourceMatches?.map((match, index) => (\n            <SourceMatch key={`partial-${index}`} {...match} />\n          ))}\n        </SmoothCollapse>\n      </Sources>\n    </>\n  );\n}\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  margin-bottom: 2px;\n`;\n\nconst Label = styled.div`\n  cursor: default;\n  background-color: ${({ problems }: { problems: Problem[] }) =>\n    problems.includes(Problem.MISSING)\n      ? \"salmon\"\n      : problems.includes(Problem.EMPTY) || problems.includes(Problem.DEFAULT)\n      ? \"moccasin\"\n      : problems.includes(Problem.NO_MATCH_IN_SOURCES)\n      ? \"lightgray\"\n      : problems.includes(Problem.PARTIAL_MATCH_IN_SOURCES)\n      ? \"darkseagreen\"\n      : problems.length\n      ? \"lightcyan\"\n      : \"lightgreen\"};\n  font-family: monospace, monospace;\n  padding: 0 8px;\n  border: 0.5px solid black;\n  border-radius: 4px 0 0 4px;\n  display: flex;\n  align-items: center;\n  align-self: stretch;\n`;\n\nconst ValuesContainer = styled.div``;\n\nconst LanguageTag = styled.span`\n  cursor: default;\n  padding: 0 8px;\n  color: white;\n  background-color: black;\n`;\n\nconst Sources = styled.div`\n  padding-left: 20px;\n  margin-bottom: 4px;\n`;\n\nconst ValueContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  font-family: monospace, monospace;\n`;\n\nconst ValueWrapper = styled.div`\n  padding: 0 8px;\n  border: 0.5px solid black;\n  ${({ problems }: { problems: Problem[] }) =>\n    problems.includes(Problem.MISSING)\n      ? \"background-color: red; color: white; font-style: italic; font-family: sans-serif, monospace;\"\n      : problems.includes(Problem.EMPTY)\n      ? \"background-color: orange;\"\n      : problems.length\n      ? \"background-color: lightcyan;\"\n      : \"\"}\n`;\n\nconst ValueEditor = styled.textarea`\n  font-size: 16px;\n  min-height: 1em;\n`;\n\nconst ValueButtons = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n","import { useState, useContext, useCallback, useEffect } from \"react\";\nimport SmoothCollapse from \"react-smooth-collapse\";\nimport ControlsContainer from \"./components/ControlsContainer\";\nimport styled from \"styled-components\";\nimport { TreeContext } from \"./Context\";\nimport { NodeType } from \"../protocol\";\nimport { ValueNode } from \"./ValueNode\";\nimport { confirm, cancel } from \"./images\";\nimport { Button } from \"./components/Button\";\nimport { TNode, useEscapeKey } from \"./util\";\nimport { Problem } from \"./problem\";\n\ntype TObjectNodeProps = {\n  node: TNode;\n};\nexport function ObjectNode({ node }: TObjectNodeProps) {\n  const [expanded, setExpanded] = useState(!node.id);\n  const [showControls, setShowControls] = useState(false);\n  const [addingType, setAddingType] = useState<keyof typeof NodeType>();\n  const [addingLabel, setAddingLabel] = useState(\"\");\n\n  const {\n    onAdd,\n    onRemove,\n    problematicTranslations,\n    filteredIds,\n    disabled,\n    collapseAll,\n    onCollapseChange,\n  } = useContext(TreeContext);\n\n  const stopAdding = useCallback(() => {\n    setAddingType(undefined);\n    setAddingLabel(\"\");\n  }, []);\n\n  useEffect(() => {\n    if (!expanded || disabled) {\n      stopAdding();\n    }\n  }, [disabled, expanded, stopAdding]);\n\n  useEffect(() => {\n    if (collapseAll !== undefined) {\n      setExpanded(!collapseAll);\n    }\n  }, [collapseAll]);\n\n  useEscapeKey(addingType && stopAdding);\n\n  const problems = problematicTranslations\n    ?.filter(({ id }) => id === node.id || id.startsWith(`${node.id}.`))\n    .map(({ problem }) => problem);\n  const mainProblem = problems?.includes(Problem.MISSING)\n    ? Problem.MISSING\n    : problems?.includes(Problem.EMPTY)\n    ? Problem.EMPTY\n    : problems?.includes(Problem.NO_MATCH_IN_SOURCES)\n    ? Problem.NO_MATCH_IN_SOURCES\n    : problems?.includes(Problem.DEFAULT)\n    ? Problem.DEFAULT\n    : problems?.includes(Problem.SAME)\n    ? Problem.SAME\n    : undefined;\n\n  const addingValid =\n    addingLabel &&\n    /^\\w+$/.test(addingLabel) &&\n    !node.children.some(({ name }) => name === addingLabel);\n\n  const onConfirmAdd =\n    addingValid && addingType\n      ? () => {\n          onAdd?.(node.id, addingType, addingLabel);\n          stopAdding();\n        }\n      : undefined;\n\n  const onToggleCollapse = useCallback(() => {\n    onCollapseChange?.();\n    setExpanded((c) => !c);\n  }, [onCollapseChange]);\n  const onMouseEnter = useCallback(() => setShowControls(true), []);\n  const onMouseLeave = useCallback(() => setShowControls(false), []);\n\n  return (\n    <>\n      <NodeContainer\n        onClick={onToggleCollapse}\n        onMouseEnter={onMouseEnter}\n        onMouseLeave={onMouseLeave}\n      >\n        <Label\n          id={node.id}\n          problem={mainProblem}\n          expanded={expanded}\n          title={node.id}\n        >\n          <Caret>{expanded ? \"-\" : \"+\"}</Caret>\n          {node.name}\n        </Label>\n        {expanded ? (\n          !addingType &&\n          !disabled && (\n            <ControlsContainer\n              visible={showControls}\n              onAdd={(type) => setAddingType(type)}\n              onRemove={node.id ? () => onRemove?.(node.id) : undefined}\n            />\n          )\n        ) : (\n          <Collapsed>{`{} ${node.children.length} item${\n            node.children.length === 1 ? \"\" : \"s\"\n          }`}</Collapsed>\n        )}\n      </NodeContainer>\n      {addingType ? (\n        <>\n          <NewItemInput\n            type=\"text\"\n            autoFocus\n            placeholder={\n              addingType === NodeType.OBJECT ? \"new section\" : \"new value\"\n            }\n            onChange={(event) => setAddingLabel(event.target.value.trim())}\n            onKeyPress={(e) => e.key === \"Enter\" && onConfirmAdd?.()}\n          />\n          {addingValid ? (\n            <Button onClick={onConfirmAdd}>\n              <img src={confirm} width=\"16\" alt=\"confirm\" />\n            </Button>\n          ) : null}\n          <Button onClick={stopAdding}>\n            <img src={cancel} width=\"16\" alt=\"cancel\" />\n          </Button>\n        </>\n      ) : null}\n      <SubTree>\n        <SmoothCollapse expanded={expanded}>\n          {node.children.map((n) => {\n            if (\n              filteredIds &&\n              !filteredIds.some(\n                (id) => id === n.id || id.startsWith(`${n.id}.`)\n              )\n            ) {\n              return null;\n            }\n            return n.type === NodeType.OBJECT ? (\n              <ObjectNode key={n.id} node={n} />\n            ) : (\n              <ValueNode key={n.id} node={n} />\n            );\n          })}\n        </SmoothCollapse>\n      </SubTree>\n    </>\n  );\n}\n\nconst getLabelBackground = ({\n  id,\n  problem,\n  expanded,\n}: {\n  id: string;\n  problem?: Problem;\n  expanded: boolean;\n}) => {\n  if (!id) return \"white\";\n  switch (problem) {\n    case Problem.MISSING:\n      return expanded ? \"pink\" : \"salmon\";\n    case Problem.EMPTY:\n    case Problem.DEFAULT:\n      return expanded ? \"white\" : \"moccasin\";\n    case Problem.SAME:\n      return expanded ? \"white\" : \"lightcyan\";\n    case Problem.NO_MATCH_IN_SOURCES:\n      return expanded ? \"white\" : \"lightgrey\";\n    default:\n      return expanded ? \"mintcream\" : \"lightgreen\";\n  }\n};\n\nconst NodeContainer = styled.div`\n  cursor: default;\n  position: relative;\n  display: flex;\n  flex-direction: row;\n`;\n\nconst Caret = styled.span`\n  min-width: 10px;\n  margin-right: 2px;\n`;\n\nconst Label = styled.span`\n  background-color: ${getLabelBackground};\n  font-family: monospace, monospace;\n  padding: 0 8px;\n  border: 0.5px solid black;\n  border-radius: 4px;\n\n  &:hover {\n    font-weight: bold;\n  }\n`;\n\nconst Collapsed = styled.span`\n  color: grey;\n  margin: 0 8px;\n`;\n\nconst SubTree = styled.div`\n  padding-left: 20px;\n  margin-bottom: 4px;\n`;\n\nconst NewItemInput = styled.input`\n  font-family: monospace, monospace;\n  font-size: 16px;\n  padding: 0 8px;\n  margin-left: 20px;\n  margin-bottom: 4px;\n`;\n","import { useEffect, useState } from \"react\";\nimport { Action } from \"../protocol\";\nimport {\n  findProblems,\n  NO_PROBLEM,\n  Problem,\n  TFindProblemsResult,\n} from \"./problem\";\nimport { findIDs, findFilteredIDs } from \"./filter\";\nimport { TreeContext } from \"./Context\";\nimport { ObjectNode } from \"./ObjectNode\";\nimport { TSourceMatch } from \"./components/SourceMatch\";\nimport { TNode } from \"./util\";\n\ntype TProblemsFilter = Array<Problem | typeof NO_PROBLEM>;\ntype TFilter = {\n  text: string;\n  caseSensitive: boolean;\n  problems: TProblemsFilter;\n};\ntype TreeData = {\n  content: TNode;\n  languages?: string[];\n  deepLKey?: string;\n};\ntype TreeProps = {\n  data?: TreeData;\n  sourceMatches?: TSourceMatch[];\n  filter: TFilter;\n  onSendMessage: (message: object) => void;\n  disabled?: boolean;\n  collapseAll?: boolean;\n  onCollapseChange: () => void;\n};\n\nexport default function Tree({\n  data,\n  sourceMatches,\n  filter: { text: textFilter, caseSensitive, problems: problemsFilter },\n  onSendMessage,\n  disabled,\n  collapseAll,\n  onCollapseChange,\n}: TreeProps) {\n  const [problematicTranslations, setProblematicTranslations] =\n    useState<TFindProblemsResult>([]);\n  useEffect(() => {\n    if (data?.languages?.length) {\n      setProblematicTranslations(\n        findProblems(data.content, data.languages, sourceMatches)\n      );\n    }\n  }, [sourceMatches, data]);\n\n  const [textFilteredIds, setTextFilteredIds] = useState<string[]>();\n  useEffect(() => {\n    if (data && textFilter) {\n      setTextFilteredIds(\n        findFilteredIDs(data.content, textFilter, caseSensitive)\n      );\n    } else {\n      setTextFilteredIds(undefined);\n    }\n  }, [caseSensitive, textFilter, data]);\n\n  let filteredIds = textFilteredIds;\n  if (data && problemsFilter?.length) {\n    const IDs = textFilteredIds || findIDs(data.content);\n\n    const problemIdMap = problematicTranslations.reduce<{\n      [id: string]: Problem[];\n    }>((aggr, { id, problem }) => {\n      if (aggr[id]) {\n        aggr[id].push(problem);\n      } else {\n        aggr[id] = [problem];\n      }\n      return aggr;\n    }, {});\n\n    filteredIds = IDs.filter(\n      (id) =>\n        (problemsFilter.includes(NO_PROBLEM) && !problemIdMap[id]) ||\n        problemIdMap[id]?.some((problem) => problemsFilter.includes(problem))\n    );\n  }\n\n  return (\n    <TreeContext.Provider\n      value={{\n        collapseAll,\n        onCollapseChange,\n        disabled,\n        filteredIds,\n        problematicTranslations,\n        languages: data?.languages,\n        deepLKey: data?.deepLKey,\n        onAdd: (id, type, label) => onSendMessage(Action.add(id, type, label)),\n        onChangeValue: (id, language, value) =>\n          onSendMessage(Action.changeValue(id, language, value)),\n        onRemove: (id) => onSendMessage(Action.remove(id)),\n        onOpen: (file, line, column) =>\n          onSendMessage(Action.open(file, line, column)),\n      }}\n    >\n      {data ? <ObjectNode node={data.content} /> : null}\n    </TreeContext.Provider>\n  );\n}\n","import Footer from \"./Footer\";\nimport useWebSocket, { ReadyState } from \"react-use-websocket\";\nimport { useCallback, useEffect, useState, useMemo } from \"react\";\nimport Tree from \"./tree/Tree\";\nimport { Problem, NO_PROBLEM } from \"./tree/problem\";\nimport styled from \"styled-components\";\nimport { ActionType } from \"./protocol\";\nimport { getServerHost } from \"./tree/util\";\nimport { TSourceMatch } from \"./tree/components/SourceMatch\";\n\nexport default function App() {\n  const serverHost = getServerHost();\n\n  const [collapseAll, setCollapseAll] = useState<boolean>();\n\n  const [caseSensitive, setCaseSensitive] = useState(false);\n  const [filter, setFilter] = useState(\"\");\n  const [showProblemsFilter, setShowProblemsFilter] = useState(false);\n  const [filteredProblems, setFilteredProblems] = useState<\n    Array<Problem | typeof NO_PROBLEM>\n  >([]);\n\n  const [sourceMatches, setSourceMatches] = useState<TSourceMatch[]>();\n  const [data, setData] = useState();\n  const handleIncomingMessage = useCallback((action) => {\n    switch (action.action) {\n      case ActionType.DATA_UPDATE:\n        setData(action.data);\n        break;\n      case ActionType.SOURCE_MATCHES_UPDATE:\n        setSourceMatches(action.data);\n        break;\n      default:\n        console.error(\"Invalid action:\", action.action);\n        break;\n    }\n  }, []);\n\n  const { sendMessage, readyState } = useWebSocket(`ws://${serverHost}`, {\n    retryOnError: true,\n    shouldReconnect: () => true,\n    reconnectAttempts: 100,\n    onMessage: (ev) => handleIncomingMessage(JSON.parse(ev.data)),\n  });\n\n  const getStatusLabel = useCallback(() => {\n    switch (readyState) {\n      case ReadyState.OPEN:\n        return \"Connected\";\n      case ReadyState.CONNECTING:\n        return \"Connecting\";\n      case ReadyState.CLOSED:\n        return \"Server not reachable\";\n      default:\n        return \"Unknown\";\n    }\n  }, [readyState]);\n\n  const onSendMessage = useCallback(\n    (message) => {\n      sendMessage(JSON.stringify(message));\n    },\n    [sendMessage]\n  );\n\n  const onCollapseChange = useCallback(() => setCollapseAll(undefined), []);\n\n  useEffect(() => {\n    if (readyState === ReadyState.OPEN) {\n      fetch(`http://${serverHost}/data`)\n        .then((response) => response.json())\n        .then(setData);\n    }\n  }, [readyState, serverHost]);\n\n  const hasSources = !!sourceMatches;\n  const ALL_PROBLEMS = useMemo(\n    () =>\n      (\n        [NO_PROBLEM, ...Object.values(Problem)] as Array<\n          Problem | typeof NO_PROBLEM\n        >\n      ).filter(\n        (p) =>\n          hasSources ||\n          (p !== Problem.NO_MATCH_IN_SOURCES &&\n            p !== Problem.PARTIAL_MATCH_IN_SOURCES)\n      ),\n    [hasSources]\n  );\n\n  return (\n    <AppContainer>\n      <TopBar>\n        <ConnectionStatus status={readyState}>\n          {getStatusLabel()}\n        </ConnectionStatus>\n        <Collapse>\n          <span>\n            <button\n              disabled={collapseAll === false}\n              onClick={() => setCollapseAll(false)}\n              title=\"Expand All\"\n            >\n              +\n            </button>\n            <button\n              disabled={collapseAll}\n              onClick={() => setCollapseAll(true)}\n              title=\"Collapse All\"\n            >\n              -\n            </button>\n          </span>\n        </Collapse>\n        <Filter>\n          <span>\n            Filter:\n            <FilterInput\n              onChange={(event) => setFilter(event.target.value.trim())}\n            />\n            <input\n              type=\"checkbox\"\n              name=\"case sensitive\"\n              checked={caseSensitive}\n              onChange={(event) => setCaseSensitive(event.target.checked)}\n            />\n            case sensitive\n            <ProblemsFilterWrapper>\n              <button onClick={() => setShowProblemsFilter((s) => !s)}>\n                Problems\n              </button>\n              {showProblemsFilter && (\n                <ProblemsFilter>\n                  {ALL_PROBLEMS.map((v) => (\n                    <span key={v}>\n                      <input\n                        type=\"checkbox\"\n                        name={v}\n                        checked={filteredProblems.includes(v)}\n                        onChange={(event) =>\n                          setFilteredProblems((prev) =>\n                            event.target.checked\n                              ? [...prev, v]\n                              : prev.filter((x) => x !== v)\n                          )\n                        }\n                      />\n                      {v}\n                    </span>\n                  ))}\n                </ProblemsFilter>\n              )}\n            </ProblemsFilterWrapper>\n          </span>\n        </Filter>\n      </TopBar>\n      <Content>\n        {!data && \"No data\"}\n        <Tree\n          data={data}\n          sourceMatches={sourceMatches}\n          collapseAll={collapseAll}\n          onCollapseChange={onCollapseChange}\n          filter={{ text: filter, caseSensitive, problems: filteredProblems }}\n          onSendMessage={onSendMessage}\n          disabled={readyState !== ReadyState.OPEN}\n        />\n      </Content>\n\n      <Footer />\n    </AppContainer>\n  );\n}\n\nconst AppContainer = styled.div`\n  background-color: #ffffff;\n  display: flex;\n  flex-direction: column;\n  min-height: 100vh;\n\n  font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", \"Oxygen\",\n    \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\",\n    sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  font-weight: 400;\n`;\n\nconst TopBar = styled.div`\n  width: 100vw;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  padding-left: 1em;\n  padding-right: 1em;\n`;\n\nconst Collapse = styled.div`\n  flex: 1;\n  display: flex;\n  justify-content: space-around;\n`;\n\nconst Filter = styled.div`\n  flex: 3;\n  display: flex;\n  justify-content: space-around;\n`;\n\nconst ProblemsFilterWrapper = styled.div`\n  position: relative;\n`;\n\nconst FilterInput = styled.input`\n  font-family: monospace, monospace;\n  font-size: 16px;\n  padding: 0 8px;\n  margin-left: 1em;\n  min-width: min(50vw, 400px);\n`;\n\nconst ProblemsFilter = styled.div`\n  position: absolute;\n  background-color: #ffffff;\n  border: 0.5px solid black;\n  padding: 10px;\n  display: flex;\n  flex-direction: column;\n  z-index: 1;\n`;\n\nconst Content = styled.div`\n  flex: 1;\n  min-width: 800px;\n  max-width: 95vw;\n  margin: 0 40px;\n  padding-top: 15px;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst ConnectionStatus = styled.span`\n  color: ${({ status }: { status: ReadyState }) =>\n    status === ReadyState.OPEN\n      ? \"darkgreen\"\n      : status === ReadyState.CONNECTING\n      ? \"black\"\n      : \"darkred\"};\n`;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}